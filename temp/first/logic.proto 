syntax = "proto3";
package pb;
option go_package = "git.sr.ht/~ionous/pb";

import "main.proto";

// AllTrue returns false only when one of its specified tests returns false.
// It does not necessarily run all of the tests, it exits as soon as any test return false.
// An empty list returns true.
message AllTrue {
	repeated BoolEval _tests = 1; 
}

// Always returns true
message Always {}

// AnyTrue returns true only when one of its specified tests returns true.
// It does not necessarily run all of the tests, it exits as soon as any test return true.
// An empty list returns false.
message AnyTrue {
	repeated BoolEval _tests = 1;
}

message CompareNum struct {
	A  rt.NumberEval `if:"selector=num"`
	Is Comparator    `if:"selector,compact"`
	B  rt.NumberEval `if:"selector"`
	// fix: add optional epsilon?
}

message CompareText struct {
	A  rt.TextEval `if:"selector=txt"`
	Is Comparator  `if:"selector,compact"`
	B  rt.TextEval `if:"selector"`
}

type CountOf struct {
	// Pos reader.Position `if:"internal"` // generated at import time to provide a unique counter for each sequence
	Num rt.NumberEval   `if:"selector"`
	Trigger Trigger 
}

message Trigger {
	oneOf trigger {
		TriggerOnce 
		TriggerCycle
		TriggerSwitch 
	}
}

