# Common mathematical operations.
Spec:requires:contains:
  - "math"
  - - "idl/prim"
    - "idl/rtti"
  - - # Add two numbers and return the result.
      Flow:slots:lede:terms:
        - "add_value"
        - "num_eval"
        - "add"
        - - # The augend.
            Term:name:type:
              - "_"
              - "a"
              - "num_eval"
          - # The addend.
            Term:name:type:
              - "value"
              - "b"
              - "num_eval"

    - # Subtract two numbers and return the result.
      Flow:slots:lede:terms:
        - "subtract_value"
        - "num_eval"
        - "subtract"
        - - # The minuend.
            Term:name:type:
              - "_"
              - "a"
              - "num_eval"
          - # The subtrahend.
            Term:name:type:
              - "value"
              - "b"
              - "num_eval"

    - # Multiply two numbers and return the result.
      Flow:slots:lede:terms:
        - "multiply_value"
        - "num_eval"
        - "multiply"
        - - # The multiplier.
            Term:name:type:
              - "_"
              - "a"
              - "num_eval"
          - # The multiplicand.
            Term:name:type:
              - "value"
              - "b"
              - "num_eval"

    - # Divide one number by another and return the result.
      Flow:slots:lede:terms:
        - "divide_value"
        - "num_eval"
        - "divide"
        - - # The numerator.
            Term:name:type:
              - "_"
              - "a"
              - "num_eval"
          - # The divisor.
            Term:name:type:
              - "value"
              - "b"
              - "num_eval"

    - # Divide one number by another and return the remainder.
      Flow:slots:lede:terms:
        - "mod_value"
        - "num_eval"
        - "mod"
        - - # The dividend.
            Term:name:type:
              - "_"
              - "a"
              - "num_eval"
          - # The divisor.
            Term:name:type:
              - "value"
              - "b"
              - "num_eval"

    - # Remove the sign from a value and return its positive value.
      Flow:slots:lede:terms:
        - "abs_value"
        - "num_eval"
        - "absolute"
        - - # The value to normalize.
            Term:type:
              - "value"
              - "num_eval"

    - # Increase a stored value and, optionally, return the new value.
      Flow:slots:lede:terms:
        - "increment"
        - - "num_eval"
          - "execute"
        - "increase"
        - - # A reference to the value to increase.
            # This reads and writes to that value.
            Term:name:type:
              - "_"
              - "target"
              - "address"
          - # If not specified, increments by 1.
            Term:name:type:optional:
              - "by"
              - "step"
              - "num_eval"
              - true

    - # Decrease a stored value and, optionally, return the new value.
      Flow:slots:lede:terms:
        - "decrement"
        - - "num_eval"
          - "execute"
        - "decrease"
        - - # A reference to the value to decrease.
            # This reads and writes to that value.
            Term:name:type:
              - "_"
              - "target"
              - "address"
          - # if not specified, decrements by 1.
            Term:name:type:optional:
              - "by"
              - "step"
              - "num_eval"
              - true

    - # Used when comparing values.
      Str:options:
        - "comparison"
        - - Option: "equal_to"
          - Option: "other_than"
          - Option: "greater_than"
          - Option: "less_than"
          - Option: "at_least"
          - Option: "at_most"

    - # Compare two values.
      # If the two values are of different types, this will attempt -- in a limited way -- to coerce the second value to match the type of the first value before comparing them.
      #
      # Any value can be coerced to bool ( following the truthiness rules for [IsValue] ), and bool and num values can be coerced into text.
      # Otherwise, the types of the values must match exactly.
      #
      # Numbers are compared using an internally determined default tolerance.
      # To control the tolerance between numbers, use [CompareNum].
      Flow:slots:lede:terms:
        - "compare_value"
        - "bool_eval"
        - "is"
        - - # The first value.
            # If needed, the second value will coerced to match the type of the first.
            Term:name:type:
              - "_"
              - "a"
              - "assignment"
          - # The specific way to compare the two values.
            Term:name:type:
              - "matching"
              - "compare"
              - "comparison"
          - # The first value.
            # If needed, this value will coerced to match the type of the first value.
            Term:name:type:
              - "value"
              - "b"
              - "assignment"

    - # Compare two numbers.
      Flow:slots:lede:terms:
        - "compare_num"
        - "bool_eval"
        - "is"
        - - # The first number.
            Term:name:type:
              - "_"
              - "a"
              - "num_eval"
          - # The specific way to compare the two numbers.
            Term:name:type:
              - "matching"
              - "compare"
              - "comparison"
          - # The second number.
            Term:name:type:
              - "num"
              - "b"
              - "num_eval"
          - # A positive value to indicate how close the two numbers can be.
            Term:name:type:optional:
              - "within"
              - "tolerance"
              - "num"
              - true

    - # Compare two text values in "lexical" ( alphabetical ) order.
      Flow:slots:lede:terms:
        - "compare_text"
        - "bool_eval"
        - "is"
        - - # The first text value.
            Term:name:type:
              - "_"
              - "a"
              - "text_eval"
          - # The specific way to compare the two text values.
            Term:name:type:
              - "matching"
              - "compare"
              - "comparison"
          - # The second text value.
            Term:name:type:
              - "text"
              - "b"
              - "text_eval"
