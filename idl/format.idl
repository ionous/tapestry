# Text printing and output control.
# The default Tapestry runtime will process printed text according to its [markup rules](https://pkg.go.dev/git.sr.ht/~ionous/tapestry/web/markup).
Spec:requires:contains:
  - "format"
  - - "idl/prim"
    - "idl/rtti"

  - - # A slot used internally for generating unique names during weave.
      Slot: "counter"

    - # Add a single blank line ( unless a blank line was just written ).
      # See also the <p> markup.
      Flow:slots:
        - "paragraph_break"
        - "execute"

    - # Start a new line ( if not already at a new line ).
      # See also the <wbr> markup.
      Flow:slots:
        - "soft_break"
        - "execute"

    - # Start a new line.
      # See also the <br> markup.
      Flow:slots:
        - "line_break"
        - "execute"

    - # Returns some text selected from a set of predefined values. When called multiple times, this returns each one of the values in their specified order, then it loops back to the first value again.
      Flow:slots:lede:terms:
        - "cycle_text"
        - [ "counter", "text_eval" ]
        - "cycle"
        - - # An optional name used for controlling internal state.  When omitted, weave automatically generates a globally unique name. Commands with the same name will share internal state.
            Term:type:optional:
              - "name"
              - "text"
              - true
          - # One or more pieces of text to cycle through.
            Term:name:type:repeats:
              - "text"
              - "parts"
              - "text_eval"
              - true

    - # Returns some text selected from a set of predefined values. When called multiple times, this returns each one of the values in a randomized order. After returning all of the available options, it begins again with a new ordering.
      Flow:slots:lede:terms:
        - "shuffle_text"
        - [ "counter", "text_eval" ]
        - "shuffle"
        - - # An optional name used for controlling internal state.  When omitted, weave automatically generates a globally unique name. Commands with the same name will share internal state.
            Term:type:optional:
              - "name"
              - "text"
              - true
          - # One or more pieces of text to shuffle through.
            Term:name:type:repeats:
              - "text"
              - "parts"
              - "text_eval"
              - true
          - Term:type:private:
              - "indices"
              - "shuffler"
              - true

    - # Returns some text selected from a set of predefined values. When called multiple times, this returns each of its inputs in turn. After returning all of the available options, it sticks to using the last option.
      #
      # As a special case, if there was only ever one option: it returns that option followed by nothing ( the empty string ) forever after.
      Flow:slots:lede:terms:
        - "stopping_text"
        - [ "counter", "text_eval" ]
        - "stopping"
        - - # An optional name used for controlling internal state. When omitted, weave automatically generates a globally unique name. Commands with the same name will share internal state.
            Term:type:optional:
              - "name"
              - "text"
              - true
          - # One or more pieces of text to shift through.
            Term:name:type:repeats:
              - "text"
              - "parts"
              - "text_eval"
              - true

    - # Capture any and all text printed by the game, and return it as a single string of continuous text. New lines are stored as line feeds ('\n').
      Flow:slots:lede:terms:
        - "buffer_text"
        - "text_eval"
        - "buffer"
        - - # The statements to capture text output from.
            Term:name:type:repeats:
              - "_"
              - "exe"
              - "execute"
              - true

    - # Display some text to the player.
      # The default runtime will format the text according to the rules specified by the Tapestry markup package:
      # https://pkg.go.dev/git.sr.ht/~ionous/tapestry/web/markup
      Flow:slots:lede:terms:
        - "print_text"
        - "execute"
        - "print"
        - - # The text to print.
            Term:name:type:
              - "_"
              - "text"
              - "text_eval"

    - # Collect printed text and separate that text by single spaces.
      Flow:slots:lede:terms:
        - "print_words"
        - ["execute", "text_eval"]
        - "print"
        - - # Optional text to place between adjoining words.
            Term:type:optional:
              - "separator"
              - "text_eval"
              - true
          - # Runs one or more statements, and collects any text printed by them.
            Term:name:type:repeats:
              - "words"
              - "exe"
              - "execute"
              - true

    - # Collect printed text and surround the output with parenthesis '()'.
      # If no text is printed, no parentheses are printed.
      Flow:slots:lede:terms:
        - "print_brackets"
        - ["text_eval", "execute"]
        - "bracket"
        - - # Runs one or more statements, and collects any text printed by them.
            Term:name:type:repeats:
              - "_"
              - "exe"
              - "execute"
              - true

    - # Separates words with commas, and 'and'.
      Flow:slots:lede:terms:
        - "print_commas"
        - ["text_eval", "execute"]
        - "print"
        - - Term:name:type:repeats:
              - "commas"
              - "exe"
              - "execute"
              - true

    - # Group text into an unordered list <ul>.
      Flow:slots:lede:terms:
        - "print_rows"
        - ["text_eval", "execute"]
        - "print"
        - - # Runs one or more statements, and collects any text printed by them.
            Term:name:type:repeats:
              - "rows"
              - "exe"
              - "execute"
              - true

    - # Group text into a single line <li> as part of a list of lines.
      # See also: `Print rows:`.
      Flow:slots:lede:terms:
        - "print_row"
        - ["text_eval", "execute"]
        - "print"
        - - # Runs one or more statements, and collects any text printed by them.
            Term:name:type:repeats:
              - "row"
              - "exe"
              - "execute"
              - true

    - # Starts a menu. Individual menu options are printed with `Print choice:`. It's considered an error to try to print multiple menus in single turn. Menus 
      Flow:slots:lede:terms:
        - "print_menu"
        - "execute"
        - "print"
        - - # Name of the action to run when a menu option is selected.
            Term:name:type:
              - "menu"
              - "action_name"
              - "text_eval"
          - # Settings to control menu presentation.
            Term:name:optional:
              - "options"
              - "menu_options"
              - true
          - # Runs one or more statements, and collects all of the individual choices printed as these statements are executed.
            Term:name:type:repeats:
              - "do"
              - "exe"
              - "execute"
              - true

    - # Settings to control menu presentation.
      Flow:lede:terms:
        - "menu_options"
        - "menu"
        - - # Draw the menu as a ordered list using ol and li tags.
            # By default, menus ARE drawn as a list.
            Term:type:optional:
              - "show_list"
              - "bool_eval"
              - true
          - # Prefix each option with a number.
            # Implies that the player can type a number to make a selection.
            # By default, numbers ARE shown.
            Term:type:optional:
              - "show_numbers"
              - "bool_eval"
              - true

    - # Prints an individual menu choice. It's considered an error to try to print a menu choice other than during `Print menu:choices:`.
      Flow:slots:lede:terms:
        - "print_menu_choice"
        - "execute"
        - "print"
        - - # a label uniquely identifying the choice. 
            # used as text the player can type to select the option,
            # and passed to the menu action ( defined by `Print menu:do:` )
            # sometimes, this might be the name of an existing noun.
            Term:name:type:
              - "menu"
              - "label"
              - "text_eval"
          - # Text displayed on the menu for the user.
            Term:name:type:optional:
              - "choice"
              - "content"
              - "text_eval"
              - true

    - # Express a number using digits.
      # For example, given the number `12` return the text "12".
      #
      # The [story.Execute] version prints the text for the player.
      Flow:slots:lede:terms:
        - "print_num"
        - ["text_eval", "execute"]
        - "print"
        - - # The number to change into text, or to print.
            Term:type:
              - "num"
              - "num_eval"

    - # Express an integer in plain english ( aka a cardinal number ).
      # For example, given the number `12` return the text "tweleve".
      # It converts floating point numbers to integer by truncating:
      # given `1.6`, it returns "one".
      #
      # The [story.Execute] version prints the text for the player.
      Flow:slots:lede:terms:
        - "print_count"
        - ["text_eval", "execute"]
        - "print"
        - - # The number to change into words, or to print.
            Term:name:type:
              - "count"
              - "num"
              - "num_eval"

    - # Have a particular actor say some text to the player.
      # The text can contain a "template" which holds commands executed at runtime.
      # See the Tapestry guide for more information.
      Flow:slots:lede:terms:
        - "say_actor"
        - "execute"
        - "say"
        - - Term:type:
              - "actor"
              - "text_eval"
          - Term:type:
              - "text"
              - "text_eval"

