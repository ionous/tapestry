{
  "--": "assign",
  "Spec:with group:": [
    "assign",
    {
      "Group contains:": [
        {
          "--": [
            "Identifies some particular object field, local variable, or pattern argument.",
            "Addresses can be read from or written to.",
            "That is to say, addresses implement all of the rt evals,",
            "and all commands which read from objects or variables should use the methods the address interface provides."
          ],
          "Spec:with slot:": [
            "address",
            {
              "Slot": true
            }
          ]
        },
        
        {
          "--": "Store a value into a variable or object.",
          "Spec:slots:with flow:": [
            "set_value",
            "execute",
            {
              "Flow:uses:": [
                "set",
                [
                  {
                    "Term:name:type:": [
                      "_",
                      "target",
                      "address"
                    ]
                  },
                  {
                    "Term:type:": [
                      "value",
                      "assignment"
                    ]
                  }
                ]
              ]
            }
          ]
        },
        {
          "--": "Set the state of an object.",
          "Spec:slots:with flow:": [
            "set_trait",
            "execute",
            {
              "Flow:uses:": [
                "set",
                [
                  {
                    "Term:name:type:": [
                      "_",
                      "target",
                      "text_eval"
                    ]
                  },
                  {
                    "Term:type:": [
                      "trait",
                      "text_eval"
                    ]
                  }
                ]
              ]
            }
          ]
        },
        {
          "--": [ 
          	"Copy from one stored value to another.",
          	"Requires that the type of the two values match exactly"
          ],
          "Spec:slots:with flow:": [
            "copy_value",
            "execute",
            {
              "Flow:uses:": [
                "copy",
                [
                  {
                    "Term:name:type:": [
                      "_",
                      "target",
                      "address"
                    ]
                  },
                  {
                    "Term:name:type:": [
                      "from",
                      "source",
                      "address"
                    ]
                  }
                ]
              ]
            }
          ]
        },
        {
          "Spec:slots:with flow:": [
            "object_ref",
            [
              "address",
              "bool_eval",
              "number_eval",
              "text_eval",
              "record_eval",
              "num_list_eval",
              "text_list_eval",
              "record_list_eval"
            ],
            {
              "Flow:uses:": [
                "object",
                [
                  {
                    "Term:name:type:": [
                      "_",
                      "name",
                      "text_eval"
                    ]
                  },
                  {
                    "Term:type:": [
                      "field",
                      "text_eval"
                    ]
                  },
                  {
                    "Term:optional:repeats:": [
                      "dot",
                      true,
                      true
                    ]
                  }
                ]
              ]
            }
          ]
        },
        {
          "Spec:slots:with flow:": [
            "variable_ref",
            [
              "address",
              "bool_eval",
              "number_eval",
              "text_eval",
              "record_eval",
              "num_list_eval",
              "text_list_eval",
              "record_list_eval"
            ],
            {
              "Flow:uses:": [
                "variable",
                [
                  {
                    "Term:name:type:": [
                      "_",
                      "name",
                      "text_eval"
                    ]
                  },
                  {
                    "Term:optional:repeats:": [
                      "dot",
                      true,
                      true
                    ]
                  }
                ]
              ]
            }
          ]
        },
        {
          "--": "Picks values from types containing other values.",
          "--blockly-color": "MATH_HUE",
          "Spec:with slot:": [
            "dot",
            {
              "Slot": true
            }
          ]
        },
        {
          "Spec:slots:with flow:": [
            "at_field",
            "dot",
            {
              "Flow uses:": [
                {
                  "Term:name:type:": [
                    "_",
                    "field",
                    "text_eval"
                  ]
                }
              ]
            }
          ]
        },
        {
          "Spec:slots:with flow:": [
            "at_index",
            "dot",
            {
              "Flow uses:": [
                {
                  "Term:name:type:": [
                    "_",
                    "index",
                    "number_eval"
                  ]
                }
              ]
            }
          ]
        },
        {
          "--": "Executes a pattern, and potentially returns a value.",
          "Spec:slots:with flow:": [
            "call_pattern",
            [
              "execute",
              "bool_eval",
              "number_eval",
              "text_eval",
              "record_eval",
              "num_list_eval",
              "text_list_eval",
              "record_list_eval"
            ],
            {
              "Flow:uses:": [
                "determine",
                [
                  {
                    "Term:name:type:": [
                      "_",
                      "pattern_name",
                      "text"
                    ]
                  },
                  {
                    "Term:name:type:repeats:": [
                      "args",
                      "arguments",
                      "arg",
                      true
                    ]
                  }
                ]
              ]
            }
          ]
        },
        {
          "--": "Runtime version of argument.",
          "Spec:with flow:": [
            "arg",
            {
              "Flow uses:": [
                {
                  "Term:name:type:": [
                    "_",
                    "name",
                    "text"
                  ]
                },
                {
                  "Term:name:type:": [
                    "from",
                    "value",
                    "assignment"
                  ]
                }
              ]
            }
          ]
        },
        {
          "--": [
          	"Adapts an execute statement to an assignment.",
          	"Used internally for package shuttle."
          ],
          "Spec:slots:groups:with flow:": [
            "from_exe",
            "assignment",
            "internal",
            {
              "Flow uses:": [
                {
                  "Term:name:type:": [
                    "_",
                    "exe",
                    "execute"
                  ]
                }
              ]
            }
          ]
        },
        {
          "--": "Calculates a boolean value.",
          "Spec:slots:with flow:": [
            "from_bool",
            "assignment",
            {
              "Flow uses:": [
                {
                  "Term:name:type:": [
                    "_",
                    "value",
                    "bool_eval"
                  ]
                }
              ]
            }
          ]
        },
        {
          "--": "Calculates a number.",
          "Spec:slots:with flow:": [
            "from_number",
            "assignment",
            {
              "Flow uses:": [
                {
                  "Term:name:type:": [
                    "_",
                    "value",
                    "number_eval"
                  ]
                }
              ]
            }
          ]
        },
        {
          "--": "Calculates a text string.",
          "Spec:slots:with flow:": [
            "from_text",
            "assignment",
            {
              "Flow uses:": [
                {
                  "Term:name:type:": [
                    "_",
                    "value",
                    "text_eval"
                  ]
                }
              ]
            }
          ]
        },
        {
          "--": "Calculates a record.",
          "Spec:slots:with flow:": [
            "from_record",
            "assignment",
            {
              "Flow uses:": [
                {
                  "Term:name:type:": [
                    "_",
                    "value",
                    "record_eval"
                  ]
                }
              ]
            }
          ]
        },
        {
          "--": "Calculates a list of numbers.",
          "Spec:slots:with flow:": [
            "from_num_list",
            "assignment",
            {
              "Flow uses:": [
                {
                  "Term:name:type:": [
                    "_",
                    "value",
                    "num_list_eval"
                  ]
                }
              ]
            }
          ]
        },
        {
          "--": "Calculates a list of text strings.",
          "Spec:slots:with flow:": [
            "from_text_list",
            "assignment",
            {
              "Flow uses:": [
                {
                  "Term:name:type:": [
                    "_",
                    "value",
                    "text_list_eval"
                  ]
                }
              ]
            }
          ]
        },
        {
          "--": "Calculates a list of records.",
          "Spec:slots:with flow:": [
            "from_record_list",
            "assignment",
            {
              "Flow uses:": [
                {
                  "Term:name:type:": [
                    "_",
                    "value",
                    "record_list_eval"
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
