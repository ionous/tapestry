{
    "eph":
    {
        "uses": "group",
        "desc": "commands generated by importing a story file",
        "specs":
        {
            "ephemera": {
                "uses": "slot"
            },
            "eph_at": {
                "spec": "eph {at:text} {eph:ephemera}"
            },
            "eph_list": {
                "spec": "eph {list%all+eph_at}"
            },
            "eph_begin_domain": {
                "spec": "eph {domain%name:text} {requires+text}",
                "slot": "ephemera"
            },
            "eph_end_domain": {
                "spec": "eph {domain%name:text}",
                "slot": "ephemera"
            },
            "eph_plural": {
                "spec": "eph {plural:text} {singular:text}",
                "slot": "ephemera",
                "desc": [
                    "Plurals are needed at runtime to help parser what the user inputs.",
                    "Plurals are also needed at assembly time to understand what the author wrote."
                ]
            },
            "eph_name_ref": {
                "spec": "eph {ref%name:text} {of%type:text}",
                "slot": "ephemera"
            },
            "eph_check_print": {
                "spec": "eph {check%name:text} {prints%text:text}",
                "slot": "ephemera"
            },
            "eph_run": {
                "spec": "eph {run+execute}",
                "slot": "ephemera"
            },
            "eph_aspect": {
                "spec": "eph {aspect:text} {traits+text}",
                "slot": "ephemera",
                "desc": [
                    "Declares a set of related object states such that exactly one member of the set is true for a given object at a single time.",
                    "Generates an implicit kind of 'aspect' where every field of the kind is a boolean property."
                ]
            },
            "eph_kinds": {
                "spec": "eph {kinds:text} {from:text}",
                "slot": "ephemera",
                "desc": [
                    "Declare a new kind deriving from another.",
                    "The new kind has all of the properties of all of its ancestor kinds",
                    "and it can be used wherever one of its ancestor kinds is needed.",
                    "( The reverse isn't true because the new kind can have its own unique properties not available to its ancestors. )"
                ]
            }
        }
    }
}