# Read values from, and write values to, objects and local variables.
Spec:with group:
  - "assign"
  - Group contains:
      - # Identifies some particular object field, local variable, or pattern argument.
        # Addresses can be read from or written to.
        Spec:with slot:
          - "address"
          - Slot:
      - # Store a value into a variable or object.
        # Values are specified as a generic [Assignment].
        # The various "From" commands exist to cast specific value types into an assignment.
        # However, the specified destination must still be capable of storing specific type.
        # For example:
        #   Set:value:
        #   - "@some_local_variable"
        #   - FromText: "a piece of text to store."
        # will only work if the local variable can store text. If the variable was declared as a number, the command will generate an error.
        Spec:slots:with flow:
          - "set_value"
          - "execute"
          - Flow:uses:
              - "set"
              - - # Object property or variable into which to write the value.
                  Term:name:type:
                    - "_"
                    - "target"
                    - "address"
                - # The value to copy into the destination.
                  Term:type:
                    - "value"
                    - "assignment"
      - # Set the state of an object or record.
        # See also: story `Define state:names:`.
        Spec:slots:with flow:
          - "set_state"
          - "execute"
          - Flow:uses:
              - "set"
              - - Term:name:type:
                    - "_"
                    - "target"
                    - "address"
                - Term:name:type:
                    - "state"
                    - "trait"
                    - "text_eval"

      - # Read a value from an object.
        Spec:slots:with flow:
          - "object_dot"
          - - "address"
            - "bool_eval"
            - "number_eval"
            - "text_eval"
            - "record_eval"
            - "num_list_eval"
            - "text_list_eval"
            - "record_list_eval"
          - Flow:uses:
              - "object"
              - - Term:name:type:
                    - "_"
                    - "name"
                    - "text_eval"
                - Term:optional:repeats:
                    - "dot"
                    - true
                    - true
      - # Read a value from a variable.
        Spec:slots:with flow:
          - "variable_dot"
          - - "address"
            - "bool_eval"
            - "number_eval"
            - "text_eval"
            - "record_eval"
            - "num_list_eval"
            - "text_list_eval"
            - "record_list_eval"
          - Flow:uses:
              - "variable"
              - - Term:name:type:
                    - "_"
                    - "name"
                    - "text_eval"
                - Term:optional:repeats:
                    - "dot"
                    - true
                    - true
      - # Access values inside other values.
        Spec:with slot:
          - "dot"
          - Slot:
        blockly-color: "MATH_HUE"
      - # Select a named field from a record, or a named property from an object.
        Spec:slots:with flow:
          - "at_field"
          - "dot"
          - Flow uses:
              - # The name of a field to write a value into, or to read a value out of.
                # ( The field must exist in the object or record being accessed. )
                Term:name:type:
                  - "_"
                  - "field"
                  - "text_eval"
      - # Select a value from a list of values.
        Spec:slots:with flow:
          - "at_index"
          - "dot"
          - Flow uses:
              - # Zero-based index within the list being accessed.
                Term:name:type:
                  - "_"
                  - "index"
                  - "number_eval"
      - # Execute a pattern.
        # Tell files support calling patterns directly, so this is only needed by authors using the blockly editor.
        # Because some patterns can return a value,this implements all of the possible rtti evaluations.
        Spec:slots:with flow:
          - "call_pattern"
          - - "execute"
            - "bool_eval"
            - "number_eval"
            - "text_eval"
            - "record_eval"
            - "num_list_eval"
            - "text_list_eval"
            - "record_list_eval"
          - Flow:uses:
              - "determine"
              - - Term:name:type:
                    - "_"
                    - "pattern_name"
                    - "text"
                - Term:name:type:repeats:
                    - "args"
                    - "arguments"
                    - "arg"
                    - true
      - # Runtime version of argument.
        Spec:with flow:
          - "arg"
          - Flow uses:
              - Term:name:type:
                  - "_"
                  - "name"
                  - "text"
              - Term:name:type:
                  - "from"
                  - "value"
                  - "assignment"
      - # Provide one or more execute commands for an assignment.
        # Used internally for jess rules.
        internal: true
        Spec:slots:with flow:
          - "from_exe"
          - "assignment"
          - Flow uses:
              - Term:name:type:repeats:
                  - "_"
                  - "exe"
                  - "execute"
                  - true
      - # Provide a stored value for an assignment.
        internal: true
        Spec:slots:with flow:
          - "from_address"
          - "assignment"
          - Flow uses:
              - Term:name:type:
                  - "_"
                  - "value"
                  - "address"

      - # Provide a boolean value for an assignment.
        Spec:slots:with flow:
          - "from_bool"
          - "assignment"
          - Flow uses:
              - Term:name:type:
                  - "_"
                  - "value"
                  - "bool_eval"
      - # Provide a number for an assignment.
        Spec:slots:with flow:
          - "from_number"
          - "assignment"
          - Flow uses:
              - Term:name:type:
                  - "_"
                  - "value"
                  - "number_eval"
      - # Provide a text value for an assignment.
        Spec:slots:with flow:
          - "from_text"
          - "assignment"
          - Flow uses:
              - Term:name:type:
                  - "_"
                  - "value"
                  - "text_eval"
      - # Provide a record for an assignment.
        Spec:slots:with flow:
          - "from_record"
          - "assignment"
          - Flow uses:
              - Term:name:type:
                  - "_"
                  - "value"
                  - "record_eval"
      - # Provide a list of numbers for an assignment.
        Spec:slots:with flow:
          - "from_num_list"
          - "assignment"
          - Flow uses:
              - Term:name:type:
                  - "_"
                  - "value"
                  - "num_list_eval"
      - # Provide a list of text values for an assignment.
        Spec:slots:with flow:
          - "from_text_list"
          - "assignment"
          - Flow uses:
              - Term:name:type:
                  - "_"
                  - "value"
                  - "text_list_eval"
      - # Provide a list of records for an assignment.
        Spec:slots:with flow:
          - "from_record_list"
          - "assignment"
          - Flow uses:
              - Term:name:type:
                  - "_"
                  - "value"
                  - "record_list_eval"
