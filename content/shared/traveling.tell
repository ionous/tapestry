---
Tapestry:
  - # Traveling takes the actor moving, and the door for them to travel through.
    # TODO: "entering" (ex. a container) is a different action.
    # TODO: optionally pass the direction so that it doesnt have to find it twice when 'going'
    Define action:requires:
      - "traveling through"
      - - # the actor traveling somewhere ( ex. the player. )
          Text:kind:
            - "actor"
            - "actor"
        - # the door being traveled through
          Text:kind:
            - "noun"
            - "door"
  - Define pattern:provides:
      - "traveling through"
      - - # Extract the destination from the door.
          Text:kind:initially:
            - "destination"
            - "room"
            - Object:field:
                - "@noun"
                - "destination"
        - # Determine the direction, if any, traveling through the door.
          Text:initially:
            - "direction"
            - DirectionThrough room:door:
                - FromText:
                    ParentOf:
                      FromText: "@actor"
                - FromText: "@noun"
  - Define rule:named:do:
      - "instead of traveling through"
      - "standard traveling checks"
      - - If:assuming:do:else:
            - Not:
                Is empty: "@resp"
            - - Arg:from:
                  - "resp"
                  - FromText:
                      CanReach actor:action:noun:
                        - FromText: "@actor"
                        - FromText: "traveling through"
                        - FromText: "@noun"
            - - Print: "@resp"
            - If:assuming:do:
                - Not:
                    Is empty: "@resp"
                - - Arg:from:
                      - "resp"
                      - FromText:
                          CanUse actor:action:noun:otherNoun:
                            - FromText: "@actor"
                            - FromText: "traveling through"
                            - FromText: "@noun"
                            - FromText: "@destination"
                - - Print: "@resp"
  - Define rule:do:
      - "instead of traveling through"
      - - If:do:
            - Is empty: "@destination"
            - - Say response:with:
                  - "can only travel to a destination"
                  - "{They: .noun|capitalize!} {dont:.noun} lead anywhere."
  - # 
    Define rule:do:
      - "traveling through"
      - - If:assuming:do:
            - Not:
                Is empty: "@response"
            - - Arg:from:
                  - "response"
                  - FromText:
                      MoveObject obj:dest:
                        - FromText: "@actor"
                        - FromText: "@destination"
            - - Print: "@response"
  - Define rule:do:
      - "report someone traveling through"
      - - Say response:with:
            - "someone else travels"
            - "{The: .actor|capitalize!} went through {the: .noun}."
  - Define rule:do:
      - "report traveling through"
      - - PrintVantage:
  - # 
    Define rule:do:
      - "can use"
      - - If:do:
            - AllTrue:
                - Is:matching:text:
                    - "@action"
                    - "equal_to"
                    - "traveling through"
                - Object:field:
                    - "@noun"
                    - "closed"
            - - Set:value:
                  - "@response"
                  - FromText:
                      Say response:with:
                        - "can't travel through closed doors"
                        - "{They: .noun|capitalize!} seem{unless .noun.plural_named}s{end} to be closed."
  - Define rule:do:
      - "can use"
      - - If:do:
            - AllTrue:
                - Is:matching:text:
                    - "@action"
                    - "equal_to"
                    - "traveling through"
                - Object:field:
                    - "@noun"
                    - "closed"
                - Object:field:
                    - "@noun"
                    - "locked"
            - - Set:value:
                  - "@response"
                  - FromText:
                      Say response:with:
                        - "can't travel through locked doors"
                        - "{They: .noun|capitalize!} seem{unless .noun.plural_named}s{end} to be locked."
