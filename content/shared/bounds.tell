---
- Define pattern:requires:provides:do:
    - "survey bounds"
    - - Text:kind:
          - "obj"
          - "object"
    - - TextList:initially:
          - "bounds"
          - Text list:
              - "@obj"
      - TextList:initially:
          - "queue"
          - Text list:
              - "@obj"
    - - Repeat if:do:
          - Is:matching:num:
              - List length:
                  FromTextList: "@queue"
              - "greater_than"
              - 0
          - - # process the queue
              Pop:front:as:do:
                - "@queue"
                - true
                - "enc"
                - - Repeat across:as:do:
                      - FromTextList:
                          ChildrenOf obj:
                            FromText: "@enc"
                      - "kid"
                      - - Push:value:
                            - "@bounds"
                            - FromText: "@kid"

                        - If:do:
                            - Not:
                                FullyOpaque obj:
                                  FromText: "@kid"
                            - # add this kid for additional processing
                              - Push:value:
                                  - "@queue"
                                  - FromText: "@kid"

- # add all the directions into the bounds.
  # they act as global objects available everywhere.
  Define rule:named:do:
    - "survey bounds, then continue"
    - "The directions are everywhere and nowhere rule."
    - - Push:value:
          - "@bounds"
          - FromTextList:
              Objects of: "directions"

