---
- # Ensures the standard library has properly described activation and deactivation states. The state changing algorithm used by all states happens at the engine level and gets tested there.
  Define test:requires:scene:do:
    - "activating test"
    - "Kitchenette"
    - - Declare: "You are carrying the knife."
      - Declare: "The espresso controls are a device in the kitchen."
    - - Say: "The controls are {.controls.activation}."
      - Expect text: "The controls are deactivated."
      - Activating actor:noun:
          - FromText:
              Object:dot:
                - "player"
                - AtField: "pawn"
          - FromText: "controls"
      - Expect text: "You switch on the espresso controls."
      - Say: "The controls are {.controls.activation}."
      - Expect text: "The controls are activated."
      - Deactivating actor:noun:
          - FromText:
              Object:dot:
                - "player"
                - AtField: "pawn"
          - FromText: "controls"
      - Expect text: "You switch off the espresso controls."
      - Say: "The controls are {.controls.activation}."
      - Expect text: "The controls are deactivated."
      - # Try to activate a regular object.
        Activating actor:noun:
          - FromText:
              Object:dot:
                - "player"
                - AtField: "pawn"
          - FromText: "knife"
      - Expect text: "It isn't something you can switch on."
