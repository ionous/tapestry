---
Tapestry:
  - Define test:requires:scene:do:
      - "vision testing"
      - "Kitchenette"
      - - # fix: i think the news doesnt need a full pattern. but we need to be able to replace responses.
          Define rule:do:
            - "Print news of light"
            - - Print: "The light, it burns."
      - - Comment: "Initialize the story as if we had started a game."
        - # expect that the kitchen is lit.
          Expect:
            Object:field:
              - "kitchen"
              - "lit"
        - # check that the outermost light source is the kitchen.
          Expect:
            Is:matching:value:
              - FromText:
                  TransparentOf obj:
                    FromText: "self"
              - "equal_to"
              - FromText: "kitchen"
        - # verify the low level call to see the kitchen lighting.
          Expect:
            ContainsLight object:
              FromText: "self"
        - StartGame actor:quietly:
            - FromText:
                Object:field:
                  - "player"
                  - "pawn"
            - FromBool: true
        - # start game should set the actor to is illuminated.
          Expect:
            Object:field:dot:
              - "self"
              - "lighting"
              - - AtField: "illuminated"
        - # start game should set the story's cache.
          Expect:
            Object:field:
              - "story"
              - "illuminated"
        - # and asking through the illuminates pattern should be fine.
          Expect:
            Illuminates actor:
              FromText: "self"
        - Comment: "Change the kitchen lighting, update time, and verify the game prints the arrival of darkness."
        - Set:trait:
            - "kitchen"
            - "unlit"
        - PassTime:
        - # update should clear actor illuminated
          Expect:
            Not:
              Object:field:dot:
                - "self"
                - "lighting"
                - - AtField: "illuminated"
        - # update should set the story to not is illuminated
          Expect:
            Object:field:
              - "story"
              - "not illuminated"
        - # asking through the pattern should also be fine.
          Expect:
            Not:
              Illuminates actor:
                FromText: "self"
        - Expect output: "It is now pitch dark in here!"
        - Comment: "Verify that light breaks forth in a glorious wonder."
        - Set:trait:
            - "kitchen"
            - "lit"
        - PassTime:
        - Expect output: "The light, it burns."
