---
- # Provides a way to describe a generic group of objects.
  # By default, it prints the group size in words, then prints the plural name of the target.
  # ( It's similar to Inform's "Printing a number of something." )
  Define pattern:requires:provides:do:
    - "print several"
    - - Text:kind:
          - "obj"
          - "thing"
      - Number: "group size"
      - Text: "label"
    - - Nothing:
    - - Print:
          Spaces do:
            - Say: "{print_num_word: .group_size}"
            - If:do:else:
                - Is empty: "@label"
                - - Say: "{if .group_size > 1}{print_plural_name: .obj}{else}{print_name: .obj}{end}"
                - Finally do:
                    - Say: "{if .group_size > 1}{pluralize: .label}{else}{singularize: .label}{end}"
- #
  Define test:scene:do:
    - "print several"
    - - Declare: "The books are things."
    - - Say:
          - "{print_several: .books}"
          - "{print_several: .books 5}"
      - Expect output:
          - "zero books"
          - "five books"
