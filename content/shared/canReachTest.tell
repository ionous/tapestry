---
- Define test:requires:scene:do:
    - "reach test"
    - "Kitchenette"
    - - Declare: "An other worldly cloak is a thing."
      - Note: "it is nowhere."
      - Declare: "You are in the cabinet."
    - - If:assuming:do:else:
          - Not:
              Is nothing: "@response"
          - - Arg:from:
                - "response"
                - FromText:
                    CanReach actor:noun:
                      - FromText: "self"
                      - FromText: "beans"
          - - Say: "okay: {.response}"
          - Finally do:
              - Print: "failed: shouldnt have reached into the espresso machine."
      - Expect text: "okay: The espresso machine isn't open."
      - If:assuming:do:else:
          - Not:
              Is nothing: "@response"
          - - Arg:from:
                - "response"
                - FromText:
                    CanReach actor:noun:
                      - FromText: "self"
                      - FromText: "tomatoes"
          - - Say: "failed: {.response}"
          - Finally do:
              - Print: "okay: reached outside the open cabinet."
      - Expect text: "okay: reached outside the open cabinet."
      - Set:state:
          - "#machine"
          - "open"
      - If:assuming:do:else:
          - Not:
              Is nothing: "@response"
          - - Arg:from:
                - "response"
                - FromText:
                    CanReach actor:noun:
                      - FromText: "self"
                      - FromText: "beans"
          - - Say: "failed: {.response}"
          - Finally do:
              - Print: "okay: reached inside the open espresso machine."
      - Expect text: "okay: reached inside the open espresso machine."
      - Set:state:
          - "#cabinet"
          - "closed"
      - If:assuming:do:else:
          - Not:
              Is nothing: "@response"
          - - Arg:from:
                - "response"
                - FromText:
                    CanReach actor:noun:
                      - FromText: "self"
                      - FromText: "tomatoes"
          - - Say: "okay: {.response}"
          - Finally do:
              - Print: "failed: shouldnt have reached from the closed cabinet."
      - Expect text: "okay: The cabinet isn't open."
      - If:assuming:do:else:
          - Not:
              Is nothing: "@response"
          - - Arg:from:
                - "response"
                - FromText:
                    CanReach actor:noun:
                      - FromText: "self"
                      - FromText: "cloak"
          - - Say: "okay: {.response}"
          - Finally do:
              - Print: "failed: shouldnt have reached out of world."
      - Expect text: "okay: It isn't available."
