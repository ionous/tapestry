---
Tapestry:
  - Declare: "Agents are kinds of object."
  - Declare: "Players are kinds of agent."
  - Define nouns:as:
      - "the player"
      - "players"
  - Define kind:fields:
      - "Agents"
      - - Text: "pawn"
  - # 
    Define nouns:as:
      - "self"
      - "actor"
  - Define value:of:as:
      - "pawn"
      - "the player"
      - FromText: "self"
  - Define value:of:as:
      - "printed name"
      - "self"
      - FromText: "you"
  - Declare: "You are proper named and privately named."
  - # 
    Define pattern:requires:provides:
      - "is player"
      - - Text:kind:
            - "obj"
            - "object"
      - - Bool: "success"
  - Define rule:named:do:
      - "is player"
      - "play from agent"
      - - If:do:
            - KindOf:is:
                - "@obj"
                - "agents"
            - - Set:value:
                  - "@success"
                  - FromBool:
                      Is:matching:text:
                        - "@obj"
                        - "equal_to"
                        - IdOf: "player"
  - Define rule:named:do:
      - "is player"
      - "player from actor"
      - - If:do:
            - KindOf:is:
                - "@obj"
                - "actors"
            - - Set:value:
                  - "@success"
                  - FromBool:
                      Is:matching:text:
                        - "@obj"
                        - "equal_to"
                        - Object:field:
                            - "player"
                            - "pawn"
  - # 
    Define test:do:
      - "player tests"
      - - Expect:
            IsPlayer obj:
              FromText: "self"
  - # self is the actor
    Interpret alias:as:
      - - "me"
        - "myself"
        - "self"
      - "self"
