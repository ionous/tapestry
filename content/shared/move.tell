---
- # tbd: can this and should this be made into an action?
  Define pattern:requires:provides:do:
    - "Move Object"
    - - Text:kind:
          - "obj"
          - "object"
      - Text:kind:
          - "dest"
          - "object"
    - - Text: "response"
    - - # allow after rules to run.
        Continue:
- Define rule:do:
    - "before move object"
    - - If:do:
          - Not:
              KindOf:is:
                - "@obj"
                - "things"
          - - # check for tangibility instead?
              Set:value:
                - "@response"
                - FromText:
                    Say response:with:
                      - "You can only move things."
                      - "You can only move things."
- Define rule:do:
    - "before move object"
    - - If:do:
          - Is empty: "@obj"
          - - Set:value:
                - "@response"
                - FromText:
                    Say response:with:
                      - "You can't move nothing."
                      - "You can't move nothing."
- Define rule:named:do:
    - "after move object"
    - "update story movement."
    - - # note: if move object were an event, we wouldnt have to explicitly test for the story actor here, because the handler would be filtered to the player implicitly.
        If:do:
          - Is:matching:text:
              - "@obj"
              - "equal_to"
              - Object:dot:
                  - "story"
                  - AtField: "actor"
          - - UpdateStory:
- Define rule:do:
    - "move object"
    - - If:do:
          - Object:dot:
              - "@obj"
              - AtField: "worn"
          - - Set:value:
                - Object:dot:
                    - "@obj"
                    - AtField: "not worn"
                - FromBool: true
      - If:do:
          - Is:matching:text:
              - "@dest"
              - "other_than"
              - ParentOf obj:
                  FromText: "@obj"
          - - Relate:to:via:
                - "@dest"
                - "@obj"
                - "whereabouts"
- #
  Define pattern:requires:provides:do:
    - "Remove from play"
    - - Text:kind:
          - "obj"
          - "object"
    - - Nothing:
    - - If:do:
          - Is empty: "@from"
          - - Log:value:
                - "debug"
                - FromText: "You can't remove nothing from play."
      - Set:value:
          - Object:dot:
              - "@obj"
              - AtField: "not worn"
          - FromBool: true
      - Relate:to:via:
          - ""
          - "@from"
          - "whereabouts"
- # a low level command to move the object and set its wearable status.
  # It doesn't check wearable or other permissions.
  Define pattern:requires:provides:do:
    - "Wear object"
    - - Text:kind:
          - "obj"
          - "object"
      - Text:kind:
          - "actor"
          - "actor"
    - - Nothing:
    - - If:do:
          - Not:
              Is:matching:text:
                - HolderOf obj:
                    FromText: "@obj"
                - "equal_to"
                - "@actor"
          - - MoveObject obj:dest:
                - FromText: "@obj"
                - FromText: "@actor"
      - If:do:
          - Is:matching:text:
              - HolderOf obj:
                  FromText: "@obj"
              - "equal_to"
              - "@actor"
          - - Set:value:
                - Object:dot:
                    - "@obj"
                    - AtField: "not worn"
                - FromBool: true
