// Package typeinfo describes tapestry autogenerated structures.
// It follows closely from tapestry typespecs:
// The typespecs describes the user specification ( in .ifspec, or .tells files )
// while the typeinfo describes the golang structures derived from those specs.
// unless otherwise specified, strings are underscore separated and lowercase.
package typeinfo

// implemented by every auto-generated command
type Inspector interface {
	Inspect() T
}

// marker interface implemented by each container type.
type T interface{ TypeInfo() T }

type Flow struct {
	Name  string  // normalized as lower_underscore
	Lede  string  // the compact format leading text
	Slots []*Slot // interfaces that a command implements
	Terms []Term  // terms of the command
}

type Slot struct {
	Name string //  unique
}

type Str struct {
	Name    string   // unique
	Options []string // for enumerations
}

type Num struct {
	Name string // unique
}

type Term struct {
	Name     string // go lang name
	Label    string // the compact format signature
	Private  bool
	Optional bool
	Repeats  bool
	Type     T // a pointer to Flow, Slot, Str, or Num; or, nil if private
}

func (t *Flow) TypeInfo() T {
	return t
}

func (t *Slot) TypeInfo() T {
	return t
}

func (t *Str) TypeInfo() T {
	return t
}

func (t *Num) TypeInfo() T {
	return t
}
