{{/* ------------------------------------------ */}}
{{- define "ref" }}
{{/*
  names are prefixed with bang so that they don't match in autocomplete;
  we only want the property names matched
*/}}
{ "$ref": "#/$defs/~{{ . }}" }
{{- end }}
{{/* ------------------------------------------ */}}
{{- define "titledesc" -}}
{{/* 
  the sublime and vscode hovers look better without title.
  we already know what we're hovering.
  golsp seems not to use the title either.
  "title": "{{ Title .Name }}", 
*/}}
  "description": "{{ .SchemaComment }}",
  "markdownDescription": "{{ .SchemaComment }}"
{{- end }}
{{/* ------------------------------------------ */}}
{
  {{/* redhat yaml-language-server and vscode idxelf use draft 7 */}}
  "$schema": "http://json-schema.org/draft-07/schema",
  {{ template "titledesc" . }}, 
  {{- /* the top level is an array of story statements*/}}
  "type": [
  "array",
  "null"
  ],
  "items": {
    "$ref": "#/$defs/~story_statement"
  },
  "$defs": {
    {{ range .Slot }} {{/*a map of SlotList */}}      
    "~{{.Name}}": {
        {{ template "titledesc" . }},
        "oneOf": [
        {{/* manually add shortcuts */}}
          {{ if eq .Name "text_eval" }}
          {
            "type": "string"
          },
          {{ else if eq .Name "number_eval" }}
           {
            "type": "number"
          },
          {{ else if eq .Name "bool_eval" }}
           {
            "type": "boolean"
          },
          {{ end }}
          {{- range $idx, $t := .Types -}}
            {{- if $idx }},{{ end }}
            {{ template "ref" $t -}}
          {{ end }}
        ]
      },
    {{- end }}{{/* slot */}}
    {{ range  .Str }}
    "~{{.Name}}": {
        {{ template "titledesc" . }},
        "type": "string"
      },
    {{ end }}{{/* str */}}
    {{ range .Num }}
    "~{{.Name}}": {
        {{ template "titledesc" . }},
        "type": "number"
      },
    {{ end }}{{/* num */}}
    {{ range $op := .Flow }}
      "~{{.Name}}": {
        "type": "object",
        "oneOf": [
        {{- range $idx, $ts := .Signatures -}}
          {{- if $idx }},{{ end }}
            {
            "required": [
              "{{ .TrimmedSignature }}"
            ],
            "properties": {
              "{{ .TrimmedSignature }}": {
                {{ template "titledesc" $op }},
                "type": 
                {{- if not .Terms }}
                  "null"
                {{- else }}
                  "array",
                  "additionalItems": false,
                  "items": [
                  {{- range $it, $term:= .Terms -}}
                    {{- if $it }},{{ end }}
                    {{ template "ref" (print $op.Name "." .Name) }}
                  {{ end }}
                  ]
                {{- end }}{{/* if not terms */}}
              } 
            }
          }
        {{ end }}{{/* range Signatures */}}
        ]
      },
      {{/* 
        per flow terms
        */}}
      {{- range .Terms -}}
        "~{{ $op.Name }}.{{ .Name }}":
        {{- if not .Repeats }}
          {{ template "ref" .Type -}},
        {{- else }}
        {
         "type": "array",
         "additionalItems": false,
         "items": [
           {{ template "ref" .Type }}
          ]
        },
        {{- end }}{{/* term repeats */}}
      {{ end }}{{/* range terms */}}
    {{ end }}{{/* flow */}}
    "xxx_eat_the_trailing_comma": {}
  }{{/* defs */}}
}
