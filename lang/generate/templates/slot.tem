// {{.Name}}, a type of slot.
var Zt_{{Pascal .Name}} = typeinfo.Slot{
	Name: "{{.Name}}",
	{{- template "markup.tem" .}}
}

// Holds a single slot.
type {{Pascal .Name}}_Slot struct { Value {{Pascal .Name}} }

// Implements [typeinfo.Instance] for a single slot.
func (*{{Pascal .Name}}_Slot) TypeInfo() typeinfo.T {
	return &Zt_{{Pascal .Name}}
}

// Holds a slice of slots.
type {{Pascal .Name}}_Slots []{{Pascal .Name}}

// Implements [typeinfo.Instance] for a slice of slots.
func (*{{Pascal .Name}}_Slots) TypeInfo() typeinfo.T {
	return &Zt_{{Pascal .Name}}
}

// Implements [typeinfo.Repeats] for a slice of slots.
func (op *{{Pascal .Name}}_Slots) Repeats() bool {
	return len(*op) > 0 
}
