// Code generated by "stringer -type=Phase"; DO NOT EDIT.

package assert

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainStart-0]
	_ = x[PluralPhase-1]
	_ = x[AncestryPhase-2]
	_ = x[ParamPhase-3]
	_ = x[ResultPhase-4]
	_ = x[MemberPhase-5]
	_ = x[DefaultsPhase-6]
	_ = x[MacroPhase-7]
	_ = x[NounPhase-8]
	_ = x[ValuePhase-9]
	_ = x[RelativePhase-10]
	_ = x[RulePhase-11]
	_ = x[AliasPhase-12]
	_ = x[DirectivePhase-13]
	_ = x[PostDomain-14]
	_ = x[NumPhases-15]
}

const _Phase_name = "DomainStartPluralPhaseAncestryPhaseParamPhaseResultPhaseMemberPhaseDefaultsPhaseMacroPhaseNounPhaseValuePhaseRelativePhaseRulePhaseAliasPhaseDirectivePhasePostDomainNumPhases"

var _Phase_index = [...]uint8{0, 11, 22, 35, 45, 56, 67, 80, 90, 99, 109, 122, 131, 141, 155, 165, 174}

func (i Phase) String() string {
	if i < 0 || i >= Phase(len(_Phase_index)-1) {
		return "Phase(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Phase_name[_Phase_index[i]:_Phase_index[i+1]]
}
