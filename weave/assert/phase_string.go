// Code generated by "stringer -type=Phase"; DO NOT EDIT.

package assert

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DomainStart-0]
	_ = x[PluralPhase-1]
	_ = x[DeterminerPhase-2]
	_ = x[AncestryPhase-3]
	_ = x[ParamPhase-4]
	_ = x[ResultPhase-5]
	_ = x[MemberPhase-6]
	_ = x[DefaultsPhase-7]
	_ = x[MacroPhase-8]
	_ = x[NounPhase-9]
	_ = x[ValuePhase-10]
	_ = x[RelativePhase-11]
	_ = x[RulePhase-12]
	_ = x[AliasPhase-13]
	_ = x[DirectivePhase-14]
	_ = x[PostDomain-15]
	_ = x[NumPhases-16]
}

const _Phase_name = "DomainStartPluralPhaseDeterminerPhaseAncestryPhaseParamPhaseResultPhaseMemberPhaseDefaultsPhaseMacroPhaseNounPhaseValuePhaseRelativePhaseRulePhaseAliasPhaseDirectivePhasePostDomainNumPhases"

var _Phase_index = [...]uint8{0, 11, 22, 37, 50, 60, 71, 82, 95, 105, 114, 124, 137, 146, 156, 170, 180, 189}

func (i Phase) String() string {
	if i < 0 || i >= Phase(len(_Phase_index)-1) {
		return "Phase(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Phase_name[_Phase_index[i]:_Phase_index[i+1]]
}
