{
  "Tapestry:": [
    {
      "--": [
        "Every room has a compass. The compass defines connections to other rooms.",
        "Every direction is a both a noun, and a field of the compass.",
        "New directions are defined with the 'DefineCompass' macro."
      ],
      "Declare:": "Compasses are kinds of records. Directions are kinds of kinds."
    },
    {
      "Define kind:fields:": [
        "Rooms",
        {
          "Record:": "compass"
        }
      ]
    },
    {
      "Define macro:requires:provides:do:": [
        "define compass",
        [
          {
            "Text:": "direction"
          },
          {
            "Text:": "opposite"
          }
        ],
        {
          "Nothing": true
        },
        [
          {
            "Define nouns:as:": [
              {
                "List ofText:": [
                  "@direction"
                ]
              },
              "direction"
            ]
          },
          {
            "Define:opposite:": [
              "@direction",
              "@opposite"
            ]
          },
          {
            "Define kind:fields:": [
              "Compasses",
              {
                "Text:kind:": [
                  "@direction",
                  "door"
                ]
              }
            ]
          }
        ]
      ]
    },
    {
      "DefineCompass direction:opposite:": [
        {
          "FromText:": "north"
        },
        {
          "FromText:": "south"
        }
      ]
    },
    {
      "DefineCompass direction:opposite:": [
        {
          "FromText:": "east"
        },
        {
          "FromText:": "west"
        }
      ]
    },
    {
      "DefineCompass direction:opposite:": [
        {
          "FromText:": "south"
        },
        {
          "FromText:": "north"
        }
      ]
    },
    {
      "DefineCompass direction:opposite:": [
        {
          "FromText:": "west"
        },
        {
          "FromText:": "east"
        }
      ]
    },
    {
      "DefineCompass direction:opposite:": [
        {
          "FromText:": "up"
        },
        {
          "FromText:": "down"
        }
      ]
    },
    {
      "DefineCompass direction:opposite:": [
        {
          "FromText:": "down"
        },
        {
          "FromText:": "up"
        }
      ]
    },
    {
      "Declare:": "Doors are kinds of opener."
    },
    {
      "Define kind:fields:": [
        "Doors",
        [
          {
            "Text:kind:": [
              "destination",
              "room"
            ]
          }
        ]
      ]
    },
    {
      "--": "given a door, find the named direction it represents, if any.",
      "Define pattern:requires:provides:do:": [
        "direction through",
        [
          {
            "Text:kind:": [
              "room",
              "room"
            ]
          },
          {
            "Text:kind:": [
              "door",
              "door"
            ]
          }
        ],
        {
          "--": "one of the fields of compass",
          "Text:": "direction"
        },
        {
          "Repeating across:as:do:": [
            {
              "FromTextList:": {
                "Fields of:": "compasses"
              }
            },
            "compass dir",
            {
              "If:do:": [
                {
                  "Cmp:is:txt:": [
                    "@door",
                    "equal_to",
                    {
                      "Object:field:dot:": [
                        "@room",
                        "compass",
                        {
                          "AtField:": "@compass dir"
                        }
                      ]
                    }
                  ]
                },
                [
                  {
                    "Set:from:": [
                      "@direction",
                      {
                        "FromText:": "@compass dir"
                      }
                    ]
                  },
                  {
                    "Break": true
                  }
                ]
              ]
            }
          ]
        }
      ]
    }
  ]
}
