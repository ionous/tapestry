{
  "Tapestry:": [
    {
      "Declare:": "Agents are kinds of object."
    },
    {
      "Declare:": "Players are kinds of agent."
    },
    {
      "Define nouns:as:": [
        "the player",
        "players"
      ]
    },
    {
      "Define kind:fields:": [
        "Agents",
        [
          {
            "Text:": "pawn"
          }
        ]
      ]
    },
    {
      "Define kind:fields:": [
        "Actors",
        [
          {
            "Bool:": "in darkness"
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Define nouns:as:": [
        "self",
        "actor"
      ]
    },
    {
      "Define value:of:as:": [
        "pawn",
        "the player",
        {
          "FromText:": "self"
        }
      ]
    },
    {
      "Define value:of:as:": [
        "printed name",
        "self",
        {
          "FromText:": "you"
        }
      ]
    },
    {
      "Declare:": "You are proper named and privately named."
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:result:withRules:": [
        "is player",
        [
          {
            "Text:kind:": [
              "obj",
              "object"
            ]
          }
        ],
        {
          "Bool:": "success"
        },
        []
      ]
    },
    {
      "Extend pattern:withRules:": [
        "is player",
        [
          {
            "PatternRule:does:": [
              {
                "KindOf:is:": [
                  "@obj",
                  "agents"
                ]
              },
              [
                {
                  "Set:from:": [
                    "@success",
                    {
                      "FromBool:": {
                        "Cmp:is:txt:": [
                          "@obj",
                          "equal_to",
                          {
                            "IdOf:": "player"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              {
                "KindOf:is:": [
                  "@obj",
                  "actors"
                ]
              },
              [
                {
                  "Set:from:": [
                    "@success",
                    {
                      "FromBool:": {
                        "Cmp:is:txt:": [
                          "@obj",
                          "equal_to",
                          {
                            "Object:field:": [
                              "player",
                              "pawn"
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Test:do:": [
        "player tests",
        [
          {
            "Expect:": {
              "IsPlayer obj:": {
                "FromText:": "self"
              }
            }
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "GrammarDecl:": {
        "Alias:asNoun:": [
          [
            "me",
            "myself",
            "self"
          ],
          "player"
        ]
      }
    }
  ]
}
