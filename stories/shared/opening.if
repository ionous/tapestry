{
  "Tapestry:": [
    {
      "Event:action:args common:": [
        "open",
        "opening",
        {
          "CommonAction:": "object"
        }
      ]
    },
    {
      "Extend pattern:provides:withRules:": [
        "opening",
        [
          {
            "Text:kind:initially:": [
              "actor",
              "actor",
              {
                "Object:field:": [
                  "@agent",
                  "pawn"
                ]
              }
            ]
          }
        ],
        [
          {
            "PatternRule:do:": [
              {
                "IsPlayer obj:": {
                  "FromText:": "@actor"
                }
              },
              [
                {
                  "If:from:and:do:else:": [
                    "resp",
                    {
                      "FromText:": {
                        "CanReach actor:action:noun:": [
                          {
                            "FromText:": "@actor"
                          },
                          {
                            "FromText:": "opening"
                          },
                          {
                            "FromText:": "@noun"
                          }
                        ]
                      }
                    },
                    {
                      "Not:": {
                        "Is empty:": "@resp"
                      }
                    },
                    [
                      {
                        "Print:": "@resp"
                      }
                    ],
                    {
                      "Else do:": [
                        {
                          "If:from:and:do:else:": [
                            "resp",
                            {
                              "FromText:": {
                                "CanUse actor:action:noun:": [
                                  {
                                    "FromText:": "@actor"
                                  },
                                  {
                                    "FromText:": "opening"
                                  },
                                  {
                                    "FromText:": "@noun"
                                  }
                                ]
                              }
                            },
                            {
                              "Not:": {
                                "Is empty:": "@resp"
                              }
                            },
                            [
                              {
                                "Print:": "@resp"
                              }
                            ],
                            {
                              "Else do:": {
                                "StateChanging noun:actor:trait:guard:change:": [
                                  {
                                    "FromText:": "@noun"
                                  },
                                  {
                                    "FromText:": "@actor"
                                  },
                                  {
                                    "FromText:": "open"
                                  },
                                  {
                                    "FromText:": "openable"
                                  },
                                  {
                                    "FromText:": "open"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Event:action:args common:": [
        "close",
        "closing",
        {
          "CommonAction:": "object"
        }
      ]
    },
    {
      "Extend pattern:provides:withRules:": [
        "closing",
        [
          {
            "Text:kind:initially:": [
              "actor",
              "actor",
              {
                "Object:field:": [
                  "@agent",
                  "pawn"
                ]
              }
            ]
          }
        ],
        [
          {
            "PatternRule:do:": [
              {
                "IsPlayer obj:": {
                  "FromText:": "@actor"
                }
              },
              [
                {
                  "If:from:and:do:else:": [
                    "resp",
                    {
                      "FromText:": {
                        "CanReach actor:action:noun:": [
                          {
                            "FromText:": "@actor"
                          },
                          {
                            "FromText:": "closing"
                          },
                          {
                            "FromText:": "@noun"
                          }
                        ]
                      }
                    },
                    {
                      "Not:": {
                        "Is empty:": "@resp"
                      }
                    },
                    [
                      {
                        "Print:": "@resp"
                      }
                    ],
                    {
                      "Else do:": [
                        {
                          "If:from:and:do:else:": [
                            "resp",
                            {
                              "FromText:": {
                                "CanUse actor:action:noun:": [
                                  {
                                    "FromText:": "@actor"
                                  },
                                  {
                                    "FromText:": "closing"
                                  },
                                  {
                                    "FromText:": "@noun"
                                  }
                                ]
                              }
                            },
                            {
                              "Not:": {
                                "Is empty:": "@resp"
                              }
                            },
                            [
                              {
                                "Print:": "@resp"
                              }
                            ],
                            {
                              "Else do:": {
                                "StateChanging noun:actor:trait:guard:change:": [
                                  {
                                    "FromText:": "@noun"
                                  },
                                  {
                                    "FromText:": "@actor"
                                  },
                                  {
                                    "FromText:": "closed"
                                  },
                                  {
                                    "FromText:": "openable"
                                  },
                                  {
                                    "FromText:": "close"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Rule for:kind:named:do:": [
        "before state changing",
        "openers",
        "can't open when locked",
        {
          "If:do:": [
            {
              "AllTrue:": [
                {
                  "Cmp:is:txt:": [
                    "@trait",
                    "equal_to",
                    "open"
                  ]
                },
                {
                  "Object:field:": [
                    "@noun",
                    "lockable"
                  ]
                },
                {
                  "Object:field:": [
                    "@noun",
                    "locked"
                  ]
                }
              ]
            },
            [
              {
                "Say response:with:": [
                  "can't open when locked",
                  "{They: .noun|capitalize!} seem{unless .noun.plural_named}s{end} to be locked."
                ]
              },
              {
                "Set:from:": [
                  {
                    "Variable:dot:": [
                      "event",
                      {
                        "AtField:": "cancel"
                      }
                    ]
                  },
                  {
                    "FromBool:": true
                  }
                ]
              }
            ]
          ]
        }
      ]
    },
    {
      "--": "FIX FIX FIX -- should be on opening"
    },
    {
      "Rule for:kind:named:do:": [
        "after state changing",
        "containers",
        "reveal newly visible objects",
        {
          "If:do:": [
            {
              "AllTrue:": [
                {
                  "Cmp:is:txt:": [
                    "@trait",
                    "equal_to",
                    "open"
                  ]
                },
                {
                  "Object:field:": [
                    "@noun",
                    "opaque"
                  ]
                },
                {
                  "Not:": {
                    "--": "stop if the actor is contained by the noun",
                    "AncestorOf obj:root:": [
                      {
                        "FromText:": "@noun"
                      },
                      {
                        "FromText:": "@actor"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "If:from:and:do:": [
                "concealed items",
                {
                  "FromTextList:": {
                    "VisibleStorage obj:": {
                      "FromText:": "@noun"
                    }
                  }
                },
                {
                  "Cmp:is:num:": [
                    {
                      "Len:": {
                        "FromTextList:": "@concealed_items"
                      }
                    },
                    "greater_than",
                    0
                  ]
                },
                {
                  "--": "inform doesn't print the inventory details when opening objects, so this doesn't either.",
                  "Say response:with:": [
                    "reveal newly visible objects",
                    {
                      "--": [
                        "uses 'spaces' to join multiple pieces of text",
                        "( because print response only allows a single text return.",
                        "tbd: maybe it'd make more sense for print to take repeated elements and space them automatically."
                      ],
                      "Spaces do:": [
                        {
                          "Say:": "{We!|capitalize!} open {the: .noun} revealing"
                        },
                        {
                          "Print:": {
                            "Commas do:": [
                              {
                                "Repeating across:as:do:": [
                                  {
                                    "FromTextList:": "@concealed_items"
                                  },
                                  "item",
                                  [
                                    {
                                      "Say:": "{the: .item}"
                                    }
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "Print:": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
