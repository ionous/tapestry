{
  "Tapestry:": [
    {
      "Event:action:args common:": [
        "open",
        "opening",
        {
          "CommonAction:": "object"
        }
      ]
    },
    {
      "Extend pattern:provides:withRules:": [
        "opening",
        [
          {
            "Text:kind:initially:": [
              "actor",
              "actor",
              {
                "Object:field:": [
                  "@agent",
                  "pawn"
                ]
              }
            ]
          }
        ],
        [
          {
            "PatternRule:does:": [
              {
                "IsPlayer obj:": {
                  "FromText:": "@actor"
                }
              },
              [
                {
                  "If:from:and:does:else:": [
                    "resp",
                    {
                      "FromText:": {
                        "CanReach actor:action:noun:": [
                          {
                            "FromText:": "@actor"
                          },
                          {
                            "FromText:": "opening"
                          },
                          {
                            "FromText:": "@noun"
                          }
                        ]
                      }
                    },
                    {
                      "Not:": {
                        "Is empty:": "@resp"
                      }
                    },
                    [
                      {
                        "Print:": "@resp"
                      }
                    ],
                    {
                      "ElseDo does:": [
                        {
                          "If:from:and:does:else:": [
                            "resp",
                            {
                              "FromText:": {
                                "CanUse actor:action:noun:": [
                                  {
                                    "FromText:": "@actor"
                                  },
                                  {
                                    "FromText:": "opening"
                                  },
                                  {
                                    "FromText:": "@noun"
                                  }
                                ]
                              }
                            },
                            {
                              "Not:": {
                                "Is empty:": "@resp"
                              }
                            },
                            [
                              {
                                "Print:": "@resp"
                              }
                            ],
                            {
                              "ElseDo does:": [
                                {
                                  "Send:event:": [
                                    {
                                      "Capture obj:": {
                                        "FromText:": "@noun"
                                      }
                                    },
                                    {
                                      "StateChange actor:noun:trait:guard:change:": [
                                        {
                                          "FromText:": "@actor"
                                        },
                                        {
                                          "FromText:": "@noun"
                                        },
                                        {
                                          "FromText:": "open"
                                        },
                                        {
                                          "FromText:": "openable"
                                        },
                                        {
                                          "FromText:": "open"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Event:action:args common:": [
        "close",
        "closing",
        {
          "CommonAction:": "object"
        }
      ]
    },
    {
      "Extend pattern:provides:withRules:": [
        "closing",
        [
          {
            "Text:kind:initially:": [
              "actor",
              "actor",
              {
                "Object:field:": [
                  "@agent",
                  "pawn"
                ]
              }
            ]
          }
        ],
        [
          {
            "PatternRule:does:": [
              {
                "IsPlayer obj:": {
                  "FromText:": "@actor"
                }
              },
              [
                {
                  "If:from:and:does:else:": [
                    "resp",
                    {
                      "FromText:": {
                        "CanReach actor:action:noun:": [
                          {
                            "FromText:": "@actor"
                          },
                          {
                            "FromText:": "closing"
                          },
                          {
                            "FromText:": "@noun"
                          }
                        ]
                      }
                    },
                    {
                      "Not:": {
                        "Is empty:": "@resp"
                      }
                    },
                    [
                      {
                        "Print:": "@resp"
                      }
                    ],
                    {
                      "ElseDo does:": [
                        {
                          "If:from:and:does:else:": [
                            "resp",
                            {
                              "FromText:": {
                                "CanUse actor:action:noun:": [
                                  {
                                    "FromText:": "@actor"
                                  },
                                  {
                                    "FromText:": "closing"
                                  },
                                  {
                                    "FromText:": "@noun"
                                  }
                                ]
                              }
                            },
                            {
                              "Not:": {
                                "Is empty:": "@resp"
                              }
                            },
                            [
                              {
                                "Print:": "@resp"
                              }
                            ],
                            {
                              "ElseDo does:": [
                                {
                                  "Send:event:": [
                                    {
                                      "Capture obj:": {
                                        "FromText:": "@noun"
                                      }
                                    },
                                    {
                                      "StateChange actor:noun:trait:guard:change:": [
                                        {
                                          "FromText:": "@actor"
                                        },
                                        {
                                          "FromText:": "@noun"
                                        },
                                        {
                                          "FromText:": "closed"
                                        },
                                        {
                                          "FromText:": "openable"
                                        },
                                        {
                                          "FromText:": "close"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "--": "Can't open when locked.",
      "Extend pattern:withRules:": [
        "state changing",
        [
          {
            "PatternRule:does:": [
              {
                "AllTrue:": [
                  {
                    "Cmp:is:txt:": [
                      "@trait",
                      "equal_to",
                      "open"
                    ]
                  },
                  {
                    "Object:field:": [
                      "@noun",
                      "lockable"
                    ]
                  },
                  {
                    "Object:field:": [
                      "@noun",
                      "locked"
                    ]
                  }
                ]
              },
              [
                {
                  "Set:from:": [
                    "@result",
                    {
                      "FromText:": {
                        "Print response:with:": [
                          "can't open when locked",
                          {
                            "Say:": "{They: .noun|capitalize!} seem{unless .noun.plural_named}s{end} to be locked."
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Listen kinds:handlers:": [
        "things",
        [
          {
            "With:event:provides:rules:": [
              "after",
              "state change",
              [
                {
                  "--": "initialized only when needed, for containers revealing their contents.",
                  "TextList:": "concealed items"
                }
              ],
              [
                {
                  "PatternRule:does:": [
                    {
                      "AllTrue:": [
                        {
                          "Cmp:is:txt:": [
                            "@trait",
                            "equal_to",
                            "open"
                          ]
                        },
                        {
                          "IsPlayer obj:": {
                            "FromText:": "@actor"
                          }
                        },
                        {
                          "KindOf:is:": [
                            "@noun",
                            "containers"
                          ]
                        },
                        {
                          "Object:field:": [
                            "@noun",
                            "opaque"
                          ]
                        },
                        {
                          "Not:": {
                            "AncestorOf obj:root:": [
                              {
                                "FromText:": "@noun"
                              },
                              {
                                "FromText:": "@actor"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    [
                      {
                        "Set:from:": [
                          "@concealed items",
                          {
                            "FromTextList:": {
                              "VisibleStorage obj:": {
                                "FromText:": "@noun"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "If:does:": [
                          {
                            "Cmp:is:num:": [
                              {
                                "Len:": {
                                  "FromTextList:": "@concealed items"
                                }
                              },
                              "greater_than",
                              0
                            ]
                          },
                          [
                            {
                              "Comment:": "inform doesn't print the inventory details when opening objects, so this doesn't either. "
                            },
                            {
                              "Print response:with:": [
                                "reveal newly visible objects",
                                {
                                  "Spaces does:": [
                                    {
                                      "Say:": "{We!|capitalize!} open {the: .noun}, revealing"
                                    },
                                    {
                                      "Print:": {
                                        "Commas does:": [
                                          {
                                            "Repeating across:as:does:": [
                                              {
                                                "FromTextList:": "@concealed items"
                                              },
                                              "item",
                                              [
                                                {
                                                  "Say:": "{the: .item}"
                                                }
                                              ]
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "Print:": "."
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Set:from:": [
                                "@success",
                                {
                                  "FromBool:": true
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      ]
    }
  ]
}
