{
  "Tapestry:": [
    {
      "Define kinds:as:": [
        "things",
        "kind"
      ]
    },
    {
      "Define kind:fields:": [
        "Things",
        [
          {
            "Text:": "printed name"
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Test:withScene:do:": [
        "name of a kind",
        [
          {
            "Declare:": "The named object and the unnamed object are things."
          },
          {
            "Declare:": "The unnamed object is privately named."
          }
        ],
        [
          {
            "Comment:": [
              "The story engine automagically calls \"print name\" when the name of an object is used in a template.  ",
              "ex. { .someObject }"
            ]
          },
          {
            "Say:": "{.named}, {.unnamed}."
          },
          {
            "Expect output:": "named object, thing."
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:result:withRules:": [
        "print name",
        [
          {
            "Text:kind:": [
              "obj",
              "object"
            ]
          }
        ],
        {
          "Nothing": true
        },
        []
      ]
    },
    {
      "Extend pattern:withRules:": [
        "print name",
        [
          {
            "--": [
              "if the object doesn't exist, use 'print nothing'.",
              "( by default, that will try to write: 'nowhere', 'nobody', or 'nothing'. )"
            ],
            "PatternRule:does:": [
              {
                "Not:": {
                  "Is valid:": "@obj"
                }
              },
              [
                {
                  "PrintNothing:": {
                    "FromText:": "@obj"
                  }
                }
              ]
            ]
          },
          {
            "--": "if the object was given an explicit 'printed name', print that.",
            "PatternRule:does:": [
              {
                "Cmp:is:txt:": [
                  {
                    "Object:field:": [
                      "@obj",
                      "printed name"
                    ]
                  },
                  "other_than",
                  ""
                ]
              },
              [
                {
                  "Print:": {
                    "Object:field:": [
                      "@obj",
                      "printed name"
                    ]
                  }
                },
                {
                  "Mention obj:": {
                    "FromText:": "@obj"
                  }
                }
              ]
            ]
          },
          {
            "--": [
              "if the object is publicly named, print the original name of the object;",
              "privately named objects skip this rule."
            ],
            "PatternRule:does:": [
              {
                "Object:field:": [
                  "@obj",
                  "publicly named"
                ]
              },
              [
                {
                  "Print:": {
                    "NameOf:": "@obj"
                  }
                },
                {
                  "Mention obj:": {
                    "FromText:": "@obj"
                  }
                }
              ]
            ]
          },
          {
            "--": "if nothing else was printed, print the singular name of the kind: 'room', 'container', etc.",
            "PatternRule:does:": [
              true,
              [
                {
                  "Print:": {
                    "Singular of:": {
                      "KindOf:": "@obj"
                    }
                  }
                },
                {
                  "Mention obj:": {
                    "FromText:": "@obj"
                  }
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:result:withRules:": [
        "Print nothing",
        [
          {
            "--": [
              "Print nothing takes an object reference.",
              "It uses that to try to determine the kind of the reference",
              "even if the reference itself is blank."
            ],
            "Text:kind:": [
              "obj",
              "object"
            ]
          }
        ],
        {
          "Nothing": true
        },
        []
      ]
    },
    {
      "Extend pattern:withRules:": [
        "Print nothing",
        [
          {
            "PatternRule:does:": [
              {
                "KindOf:is:nothing:": [
                  "@obj",
                  "actors",
                  true
                ]
              },
              [
                {
                  "Print:": "nobody"
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              {
                "KindOf:is:nothing:": [
                  "@obj",
                  "rooms",
                  true
                ]
              },
              [
                {
                  "Print:": "nowhere"
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              true,
              [
                {
                  "Print:": "nothing"
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:result:withRules:": [
        "mention",
        [
          {
            "Text:kind:": [
              "obj",
              "object"
            ]
          }
        ],
        {
          "Nothing": true
        },
        []
      ]
    },
    {
      "Extend pattern:withRules:": [
        "mention",
        [
          {
            "PatternRule:does:": [
              {
                "KindOf:is:": [
                  "@obj",
                  "things"
                ]
              },
              [
                {
                  "Set:from:": [
                    {
                      "Object:field:": [
                        "@obj",
                        "mentioned"
                      ]
                    },
                    {
                      "FromBool:": true
                    }
                  ]
                },
                {
                  "Set:from:": [
                    {
                      "Object:field:": [
                        "settings",
                        "mentions"
                      ]
                    },
                    {
                      "FromNumber:": {
                        "Inc:by:": [
                          1,
                          {
                            "Object:field:": [
                              "settings",
                              "mentions"
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    }
  ]
}
