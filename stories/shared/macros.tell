Tapestry:
  - # ex. kinds are usually traits
    Define macro:requires:provides:do:
      - "implies something"
      - - Text: "kind"
      - - Nothing:
      - []
  - # ex. kinds are kinds of something.
    Define macro:requires:provides:do:
      - "inheriting something"
      - - Text: "kind"
      - - Nothing:
      - []
  - Define macro:requires:provides:do:
      - "carrying something"
      - - Text: "actor"
        - TextList: "things"
      - - Text: "error"
      - - Define nouns:as:
            - List ofText:
                - "@actor"
            - "actor"
        - Define nouns:as:
            - "@things"
            - "things"
        - # needed to ensure the worn nouns become carried when using sub-domain assignments
          Define nouns:traits:
            - "@things"
            - "not worn"
        - Define relativeTo:nouns:otherNouns:
            - "whereabouts"
            - "@things"
            - List ofText:
                - "@actor"
  - Define macro:requires:provides:do:
      - "wearing something"
      - - Text: "actor"
        - TextList: "things"
      - - Text: "error"
      - - Define nouns:as:
            - List ofText:
                - "@actor"
            - "actor"
        - Define nouns:as:
            - "@things"
            - "things"
        - Define nouns:traits:
            - "@things"
            - - "wearable"
              - "worn"
        - Define relativeTo:nouns:otherNouns:
            - "whereabouts"
            - "@things"
            - List ofText:
                - "@actor"
  - # might be a room or a container
    Define macro:requires:provides:do:
      - "containing something"
      - - Text: "owner"
        - TextList: "things"
      - - Text: "error"
      - - Define nouns:as:
            - "@things"
            - "things"
        - # needed to ensure the worn nouns become carried when using sub-domain assignments
          Define nouns:traits:
            - "@things"
            - "not worn"
        - If:do:
            - Not:
                KindOf:is:
                  - "@owner"
                  - "rooms"
            - - # if it's not a room, then its a container.
                Define nouns:as:
                  - List ofText:
                      - "@owner"
                  - "container"
        - Define relativeTo:nouns:otherNouns:
            - "whereabouts"
            - "@things"
            - List ofText:
                - "@owner"
  - Define macro:requires:provides:do:
      - "supporting something"
      - - Text: "supporter"
        - TextList: "things"
      - - Text: "error"
      - - Define nouns:as:
            - "@things"
            - "things"
        - # needed to ensure the worn nouns become carried when using sub-domain assignments
          Define nouns:traits:
            - "@things"
            - "not worn"
        - Define nouns:as:
            - List ofText:
                - "@supporter"
            - "supporter"
        - Define relativeTo:nouns:otherNouns:
            - "whereabouts"
            - "@things"
            - List ofText:
                - "@supporter"
