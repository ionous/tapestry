{
  "Tapestry:": [
    {
      "Define action:requires:provides:": [
        "looking",
        {
          "--": "the actor looking ( ex. the player. )",
          "Text:kind:": [
            "actor",
            "actor"
          ]
        },
        {
          "Text:kind:initially:": [
            "location",
            "object",
            {
              "LocationOf obj:": {
                "FromText:": "@actor"
              }
            }
          ]
        }
      ]
    },
    {
      "Define rule:do:": [
        "someone looking",
        {
          "Say response:with:": [
            "someone looks around",
            "{the:.actor|capitalize!} looks around."
          ]
        }
      ]
    },
    {
      "Define rule:named:do:": [
        "looking",
        "the standard looking action",
        {
          "PrintVantage where:inDarkness:": [
            {
              "FromText:": "@location"
            },
            {
              "FromBool:": {
                "Object:field:": [
                  "@actor",
                  "is in darkness"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:provides:do:": [
        "Print vantage",
        [
          {
            "Text:kind:": [
              "where",
              "object"
            ]
          },
          {
            "--": "for testing, darkness gets passed in as a flag.",
            "Bool:": "in darkness"
          }
        ],
        [
          {
            "Nothing": true
          },
          {
            "TextList:initially:": [
              "enclosures",
              {
                "TransparentList obj:": {
                  "FromText:": "@where"
                }
              }
            ]
          },
          {
            "Text:kind:initially:": [
              "room",
              "object",
              {
                "CurrentRoom obj:": {
                  "FromText:": "@where"
                }
              }
            ]
          }
        ],
        [
          {
            "Log:value:": [
              "debug",
              {
                "FromText:": {
                  "Say:": "print vantage: from:{.where}"
                }
              }
            ]
          },
          {
            "SetEverythingUnmentioned": true
          },
          {
            "If:do:else:": [
              "@in_darkness",
              [
                {
                  "PrintDarkHeader room:": {
                    "FromText:": "@room"
                  }
                },
                {
                  "Comment:": "fix? if \"thedark\" was an object, darkness witnessed could be \"thedark.visited.\" ( same as below )"
                },
                {
                  "If:do:": [
                    {
                      "AnyTrue:": [
                        {
                          "Object:field:": [
                            "settings",
                            "verbose"
                          ]
                        },
                        {
                          "AllTrue:": [
                            {
                              "Object:field:": [
                                "settings",
                                "brief"
                              ]
                            },
                            {
                              "Object:field:": [
                                "settings",
                                "not darkness witnessed"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    [
                      {
                        "PrintDarkDescription room:": {
                          "FromText:": "@room"
                        }
                      }
                    ]
                  ]
                }
              ],
              {
                "--": "not in darkness",
                "Finally do:": [
                  {
                    "Comment:": "list is inner to outer. the term \"locale\" here means some enclosure we are in."
                  },
                  {
                    "PrintLocaleTitle room:enclosures:": [
                      {
                        "FromText:": "@room"
                      },
                      {
                        "FromTextList:": "@enclosures"
                      }
                    ]
                  },
                  {
                    "PrintLocaleSubtitle enclosures:": {
                      "FromTextList:": "@enclosures"
                    }
                  },
                  {
                    "Print:": "."
                  },
                  {
                    "Comment:": "(b/c we dont have a newline op yet, we use fullstop instead.)"
                  },
                  {
                    "If:do:": [
                      {
                        "AnyTrue:": [
                          {
                            "Object:field:": [
                              "settings",
                              "verbose"
                            ]
                          },
                          {
                            "AllTrue:": [
                              {
                                "Object:field:": [
                                  "settings",
                                  "brief"
                                ]
                              },
                              {
                                "Object:field:": [
                                  "@room",
                                  "not visited"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      [
                        {
                          "Comment:": "Reorder from outer to inner"
                        },
                        {
                          "Reverse list:": "@enclosures"
                        },
                        {
                          "Repeating across:as:do:": [
                            {
                              "FromTextList:": "@enclosures"
                            },
                            "it",
                            [
                              {
                                "PrintLocaleDescription where:viewpoint:room:": [
                                  {
                                    "FromText:": "@it"
                                  },
                                  {
                                    "FromText:": "@where"
                                  },
                                  {
                                    "FromText:": "@room"
                                  }
                                ]
                              }
                            ]
                          ]
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "If:do:else:": [
              "@in_darkness",
              [
                {
                  "Set:value:": [
                    {
                      "Object:field:": [
                        "settings",
                        "is darkness witnessed"
                      ]
                    },
                    {
                      "FromBool:": true
                    }
                  ]
                }
              ],
              {
                "Finally do:": [
                  {
                    "Set:value:": [
                      {
                        "Object:field:": [
                          "@room",
                          "is visited"
                        ]
                      },
                      {
                        "FromBool:": true
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:provides:do:": [
        "print dark header",
        [
          {
            "Text:kind:": [
              "room",
              "room"
            ]
          }
        ],
        {
          "Nothing": true
        },
        {
          "Say response:with:": [
            "the darkness",
            "Darkness."
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:provides:do:": [
        "Print dark description",
        [
          {
            "Text:kind:": [
              "room",
              "room"
            ]
          }
        ],
        {
          "Nothing": true
        },
        {
          "Say response:with:": [
            "pitch dark",
            "It is pitch dark, and you can't see a thing."
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:provides:do:": [
        "Print locale title",
        [
          {
            "Text:kind:": [
              "room",
              "room"
            ]
          },
          {
            "TextList:": "enclosures"
          }
        ],
        [
          {
            "Nothing": true
          },
          {
            "Text:kind:initially:": [
              "ceiling",
              "object",
              {
                "Variable:dot:": [
                  "enclosures",
                  [
                    {
                      "AtIndex:": {
                        "Len:": {
                          "FromTextList:": "@enclosures"
                        }
                      }
                    }
                  ]
                ]
              }
            ]
          }
        ],
        {
          "If:do:else:": [
            {
              "Cmp:is:txt:": [
                "@room",
                "equal_to",
                "@ceiling"
              ]
            },
            {
              "--": [
                "when the room is the ceiling, print the plain room name.",
                "( use the room variable because it has the most knowledge of the subtype. )"
              ],
              "Say:": "{.room}"
            },
            {
              "Finally do:": [
                {
                  "Say:": "{The: .ceiling|capitalize!}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:provides:do:": [
        "Print locale subtitle",
        [
          {
            "TextList:": "enclosures"
          }
        ],
        [
          {
            "Nothing": true
          },
          {
            "Text:kind:initially:": [
              "ceiling",
              "object",
              {
                "Variable:dot:": [
                  "enclosures",
                  [
                    {
                      "AtIndex:": {
                        "Len:": {
                          "FromTextList:": "@enclosures"
                        }
                      }
                    }
                  ]
                ]
              }
            ]
          }
        ],
        [
          {
            "Repeating across:as:do:": [
              {
                "FromTextList:": "@enclosures"
              },
              "it",
              [
                {
                  "If:do:": [
                    {
                      "Cmp:is:txt:": [
                        "@it",
                        "equal_to",
                        "@ceiling"
                      ]
                    },
                    [
                      {
                        "Break": true
                      }
                    ]
                  ]
                },
                {
                  "Say:": " ({on: .it} {the: .it})"
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:provides:do:": [
        "Print locale description",
        [
          {
            "Text:kind:": [
              "where",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "viewpoint",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "room",
              "room"
            ]
          }
        ],
        [
          {
            "Nothing": true
          },
          {
            "TextList:initially:": [
              "kids",
              {
                "ChildrenOf obj:": {
                  "FromText:": "@where"
                }
              }
            ]
          },
          {
            "Number:initially:": [
              "previous mentions",
              {
                "Object:field:": [
                  "settings",
                  "mentions"
                ]
              }
            ]
          },
          {
            "TextList:": "remaining kids"
          }
        ],
        [
          {
            "If:do:": [
              {
                "Cmp:is:txt:": [
                  "@where",
                  "equal_to",
                  "@room"
                ]
              },
              [
                {
                  "Print:": {
                    "Object:field:": [
                      "@room",
                      "description"
                    ]
                  }
                }
              ]
            ]
          },
          {
            "SortTexts:byField:": [
              "@kids",
              "grouping label"
            ]
          },
          {
            "Repeating across:as:do:": [
              {
                "FromTextList:": "@kids"
              },
              "it",
              [
                {
                  "Comment:": "exclude objects that enclose the viewpoint, those get their own locale descriptions"
                },
                {
                  "If:do:": [
                    {
                      "Not:": {
                        "AnyTrue:": [
                          {
                            "Cmp:is:txt:": [
                              "@it",
                              "equal_to",
                              "@viewpoint"
                            ]
                          },
                          {
                            "AncestorOf obj:root:": [
                              {
                                "FromText:": "@viewpoint"
                              },
                              {
                                "FromText:": "@it"
                              }
                            ]
                          },
                          {
                            "IsPlayer obj:": {
                              "FromText:": "@it"
                            }
                          }
                        ]
                      }
                    },
                    [
                      {
                        "PrintObjectDescription obj:": {
                          "FromText:": "@it"
                        }
                      },
                      {
                        "If:do:": [
                          {
                            "AllTrue:": [
                              {
                                "Object:field:": [
                                  "@it",
                                  "not mentioned"
                                ]
                              },
                              {
                                "Object:field:": [
                                  "@it",
                                  "not scenery"
                                ]
                              }
                            ]
                          },
                          [
                            {
                              "Push:into:": [
                                {
                                  "FromText:": "@it"
                                },
                                "@remaining_kids"
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          },
          {
            "CanAlsoSee where:here:children:firstMention:": [
              {
                "FromText:": "@where"
              },
              {
                "FromBool:": {
                  "Cmp:is:txt:": [
                    "@where",
                    "equal_to",
                    "@room"
                  ]
                }
              },
              {
                "FromTextList:": "@remaining_kids"
              },
              {
                "FromBool:": {
                  "Cmp:is:num:": [
                    "@previous_mentions",
                    "equal_to",
                    {
                      "Object:field:": [
                        "settings",
                        "mentions"
                      ]
                    }
                  ]
                }
              }
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Comment:": "prints the first impression of an object, and gives a chance for certain objects (ex. supporters) to say something more afterwards."
    },
    {
      "Define pattern:requires:provides:do:": [
        "print object description",
        [
          {
            "Text:kind:": [
              "obj",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "locale",
              "object"
            ]
          }
        ],
        {
          "--": "setting success stops other rules from running.",
          "Bool:": "success"
        },
        {
          "--": "no default rules"
        }
      ]
    },
    {
      "--": "this prints \"on the...\" for any supporters mentioned by the scenery supporters rule or mentioned by the author.",
      "Define rule:named:do:": [
        "print object description",
        "print mentioned supporters",
        {
          "If:do:": [
            {
              "AllTrue:": [
                {
                  "Object:field:": [
                    "@obj",
                    "mentioned"
                  ]
                },
                {
                  "KindOf:is:": [
                    "@obj",
                    "supporters"
                  ]
                }
              ]
            },
            {
              "PrintInlineStorage obj:": {
                "FromText:": "@obj"
              }
            }
          ]
        }
      ]
    },
    {
      "--": [
        "this flags 'scenery supporters' as 'mentioned' so that the 'print mentioned supporters' rule will print their contents.",
        "scenery supports are supporters the author has set as 'scenery'",
        "presumably because they mentioned the supporter in the room description."
      ],
      "Define rule:named:do:": [
        "print object description",
        "print scenery supporters",
        {
          "If:do:": [
            {
              "AllTrue:": [
                {
                  "Object:field:": [
                    "@obj",
                    "scenery"
                  ]
                },
                {
                  "KindOf:is:": [
                    "@obj",
                    "supporters"
                  ]
                }
              ]
            },
            {
              "Mention obj:": {
                "FromText:": "@obj"
              }
            }
          ]
        }
      ]
    },
    {
      "Define rule:named:do:": [
        "print object description",
        "print initial impression",
        {
          "If:do:": [
            {
              "Object:field:": [
                "@obj",
                "not mentioned"
              ]
            },
            [
              {
                "Comment:": [
                  "print impression prints objects that have an initial appearance,",
                  "and flags them as mentioned."
                ]
              },
              {
                "PrintImpressionOf obj:locale:": [
                  {
                    "FromText:": "@obj"
                  },
                  {
                    "FromText:": "@locale"
                  }
                ]
              }
            ]
          ]
        }
      ]
    },
    {
      "Define rule:do:": [
        "print object description",
        {
          "If:do:": [
            {
              "KindOf:is:": [
                "@obj",
                "actors"
              ]
            },
            [
              {
                "Comment:": [
                  "This doesn't have to say anything special for actors.",
                  "Stories can change that with their own rules when needed."
                ]
              },
              {
                "Set:value:": [
                  "@success",
                  {
                    "FromBool:": true
                  }
                ]
              }
            ]
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:provides:do:": [
        "Print impression of",
        [
          {
            "Text:kind:": [
              "obj",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "locale",
              "object"
            ]
          }
        ],
        [
          {
            "Bool:": "success"
          },
          {
            "Bool:initially:": [
              "first look",
              {
                "AllTrue:": [
                  {
                    "Object:field:": [
                      "@obj",
                      "not mentioned"
                    ]
                  },
                  {
                    "Object:field:": [
                      "@obj",
                      "not scenery"
                    ]
                  },
                  {
                    "Not:": {
                      "Is empty:": {
                        "Object:field:": [
                          "@obj",
                          "initial appearance"
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          }
        ],
        {
          "--": "no default rules"
        }
      ]
    },
    {
      "Define rule:do:": [
        "print impression of",
        {
          "If:do:": [
            {
              "AllTrue:": [
                {
                  "KindOf:is:": [
                    "@obj",
                    "supporters"
                  ]
                },
                {
                  "Cmp:is:txt:": [
                    {
                      "ParentOf obj:": {
                        "FromText:": "@obj"
                      }
                    },
                    "equal_to",
                    "@locale"
                  ]
                }
              ]
            },
            [
              {
                "Comment:": "we check where to stop recursion of supporters in supporters"
              },
              {
                "Repeating across:as:do:": [
                  {
                    "FromTextList:": {
                      "ChildrenOf obj:": {
                        "FromText:": "@obj"
                      }
                    }
                  },
                  "it",
                  [
                    {
                      "PrintImpressionOf obj:": {
                        "FromText:": "@it"
                      }
                    }
                  ]
                ]
              }
            ]
          ]
        }
      ]
    },
    {
      "Define rule:do:": [
        "Print impression of",
        {
          "If:do:": [
            {
              "AllTrue:": [
                "@first_look",
                {
                  "Object:field:": [
                    "@obj",
                    "not mentioned"
                  ]
                }
              ]
            },
            [
              {
                "Say:": "{.obj.initial_appearance}"
              },
              {
                "Mention obj:": {
                  "FromText:": "@obj"
                }
              },
              {
                "Set:value:": [
                  "@success",
                  {
                    "FromBool:": true
                  }
                ]
              }
            ]
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:provides:do:": [
        "Can also see",
        [
          {
            "Text:kind:": [
              "where",
              "object"
            ]
          },
          {
            "Bool:": "here"
          },
          {
            "TextList:": "children"
          },
          {
            "Bool:": "first mention"
          }
        ],
        {
          "Nothing": true
        },
        {
          "If:do:": [
            {
              "Cmp:is:num:": [
                {
                  "Len:": {
                    "FromTextList:": "@children"
                  }
                },
                "greater_than",
                0
              ]
            },
            {
              "Say response:with:": [
                "you can also see",
                "{unless .here}{On: .where|capitalize!} {the: .where} you{else}{We!|capitalize!}{end} can {unless .first_mention}also {end}see {print_inline_objects: .children}."
              ]
            }
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:provides:do:": [
        "set everything unmentioned",
        [
          {
            "Nothing": true
          }
        ],
        {
          "Nothing": true
        },
        [
          {
            "Set:value:": [
              {
                "Object:field:": [
                  "settings",
                  "mentions"
                ]
              },
              {
                "FromNumber:": 0
              }
            ]
          },
          {
            "Repeating across:as:do:": [
              {
                "FromTextList:": {
                  "KindsOf:": "things"
                }
              },
              "it",
              [
                {
                  "Set:value:": [
                    {
                      "Object:field:": [
                        "@it",
                        "not mentioned"
                      ]
                    },
                    {
                      "FromBool:": true
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    }
  ]
}
