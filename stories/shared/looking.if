{
  "Tapestry:": [
    {
      "Event:action:args none:": [
        "look",
        "looking",
        "nothing"
      ]
    },
    {
      "Pattern:provides:rules:": [
        "looking",
        [
          {
            "Text:kind:initially:": [
              "actor",
              "object",
              {
                "Get variable:": {
                  "Variable:dot:": [
                    "agent",
                    [
                      {
                        "AtField:": "pawn"
                      }
                    ]
                  ]
                }
              }
            ]
          }
        ],
        [
          {
            "PatternRule:does:": [
              {
                "IsPlayer obj:": {
                  "FromText:": {
                    "Text value:": "@actor"
                  }
                }
              },
              [
                {
                  "Send:event:": [
                    {
                      "Capture obj:": {
                        "FromText:": {
                          "Text value:": "@actor"
                        }
                      }
                    },
                    {
                      "Look actor:": {
                        "FromText:": {
                          "Text value:": "@actor"
                        }
                      }
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Listen kinds:handlers:": [
        "actors",
        [
          {
            "With:event:provides:rules:": [
              "while",
              "look",
              [
                {
                  "Text:kind:initially:": [
                    "location",
                    "object",
                    {
                      "LocationOf obj:": {
                        "FromText:": {
                          "Text value:": "@actor"
                        }
                      }
                    }
                  ]
                }
              ],
              [
                {
                  "PatternRule:does:": [
                    true,
                    [
                      {
                        "PrintVantage where:inDarkness:": [
                          {
                            "FromText:": "@location"
                          },
                          {
                            "FromBool:": {
                              "Get variable:": {
                                "Variable:dot:": [
                                  "actor",
                                  [
                                    {
                                      "AtField:": "is in darkness"
                                    }
                                  ]
                                ]
                              }
                            }
                          }
                        ]
                      },
                      {
                        "Set variable:from:": [
                          "@success",
                          {
                            "FromBool:": true
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:requires:": [
        "Print vantage",
        [
          {
            "Text:kind:": [
              "where",
              "object"
            ]
          },
          {
            "--": "for testing, darkness gets passed in as a flag.",
            "Bool:": "inDarkness"
          }
        ]
      ]
    },
    {
      "Pattern:provides:rules:": [
        "Print vantage",
        [
          {
            "TextList:initially:": [
              "enclosures",
              {
                "TransparentList obj:": {
                  "FromText:": {
                    "Text value:": "@where"
                  }
                }
              }
            ]
          },
          {
            "Text:kind:initially:": [
              "room",
              "object",
              {
                "CurrentRoom obj:": {
                  "FromText:": {
                    "Text value:": "@where"
                  }
                }
              }
            ]
          }
        ],
        [
          {
            "PatternRule:does:": [
              true,
              [
                {
                  "Log:": {
                    "FromText:": {
                      "RenderTemplate:": "print vantage: from:{.where}"
                    }
                  }
                },
                {
                  "SetEverythingUnmentioned": true
                },
                {
                  "If:does:else:": [
                    "@inDarkness",
                    [
                      {
                        "PrintDarkHeader room:": {
                          "FromText:": {
                            "Text value:": "@room"
                          }
                        }
                      },
                      {
                        "Comment:": "fix? if \"thedark\" was an object, darkness witnessed could be \"thedark.visited.\" ( same as below )"
                      },
                      {
                        "If:does:": [
                          {
                            "AnyTrue:": [
                              {
                                "Get object:": {
                                  "Object:dot:": [
                                    "settings",
                                    [
                                      {
                                        "AtField:": "verbose"
                                      }
                                    ]
                                  ]
                                }
                              },
                              {
                                "AllTrue:": [
                                  {
                                    "Get object:": {
                                      "Object:dot:": [
                                        "settings",
                                        [
                                          {
                                            "AtField:": "brief"
                                          }
                                        ]
                                      ]
                                    }
                                  },
                                  {
                                    "Get object:": {
                                      "Object:dot:": [
                                        "settings",
                                        [
                                          {
                                            "AtField:": "not darkness witnessed"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          [
                            {
                              "PrintDarkDescription room:": {
                                "FromText:": {
                                  "Text value:": "@room"
                                }
                              }
                            }
                          ]
                        ]
                      }
                    ],
                    {
                      "ElseDo does:": [
                        {
                          "Comment:": "list is inner to outer. the term \"locale\" here means some enclosure we are in."
                        },
                        {
                          "PrintLocaleTitle room:enclosures:": [
                            {
                              "FromText:": {
                                "Text value:": "@room"
                              }
                            },
                            {
                              "FromText:": {
                                "Text value:": "@enclosures"
                              }
                            }
                          ]
                        },
                        {
                          "PrintLocaleSubtitle enclosures:": {
                            "FromText:": {
                              "Text value:": "@enclosures"
                            }
                          }
                        },
                        {
                          "Say:": "."
                        },
                        {
                          "Comment:": "(b/c we dont have a newline op yet, we use fullstop instead.)"
                        },
                        {
                          "If:does:": [
                            {
                              "AnyTrue:": [
                                {
                                  "Get object:": {
                                    "Object:dot:": [
                                      "settings",
                                      [
                                        {
                                          "AtField:": "verbose"
                                        }
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "AllTrue:": [
                                    {
                                      "Get object:": {
                                        "Object:dot:": [
                                          "settings",
                                          [
                                            {
                                              "AtField:": "brief"
                                            }
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Get variable:": {
                                        "Variable:dot:": [
                                          "room",
                                          [
                                            {
                                              "AtField:": "not visited"
                                            }
                                          ]
                                        ]
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            [
                              {
                                "Comment:": "Reorder from outer to inner"
                              },
                              {
                                "Reverse list:": {
                                  "FromTextList:": "@enclosures"
                                }
                              },
                              {
                                "Repeating across:as:does:": [
                                  {
                                    "FromTextList:": "@enclosures"
                                  },
                                  "it",
                                  [
                                    {
                                      "PrintLocaleDescription where:viewpoint:room:": [
                                        {
                                          "FromText:": "@it"
                                        },
                                        {
                                          "FromText:": {
                                            "Text value:": "@where"
                                          }
                                        },
                                        {
                                          "FromText:": {
                                            "Text value:": "@room"
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              }
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "If:does:else:": [
                    "@inDarkness",
                    [
                      {
                        "Set object:from:": [
                          {
                            "Object:field:": [
                              "settings",
                              "darkness witnessed"
                            ]
                          },
                          {
                            "FromBool:": true
                          }
                        ]
                      }
                    ],
                    {
                      "ElseDo does:": [
                        {
                          "Set variable:from:": [
                            {
                              "Variable:dot:": [
                                "room",
                                [
                                  {
                                    "AtField:": "visited"
                                  }
                                ]
                              ]
                            },
                            {
                              "FromBool:": true
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:requires:": [
        "PrintDarkHeader",
        [
          {
            "Text:kind:": [
              "room",
              "room"
            ]
          }
        ]
      ]
    },
    {
      "Pattern:rules:": [
        "PrintDarkHeader",
        [
          {
            "PatternRule:does:": [
              true,
              [
                {
                  "Say:": {
                    "Response:text:": [
                      "the darkness",
                      "Darkness."
                    ]
                  }
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:requires:": [
        "PrintDarkDescription",
        [
          {
            "Text:kind:": [
              "room",
              "room"
            ]
          }
        ]
      ]
    },
    {
      "Pattern:rules:": [
        "PrintDarkDescription",
        [
          {
            "PatternRule:does:": [
              true,
              [
                {
                  "Say:": {
                    "Response:text:": [
                      "pitch dark",
                      "It is pitch dark, and you can't see a thing."
                    ]
                  }
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:requires:": [
        "PrintLocaleTitle",
        [
          {
            "Text:kind:": [
              "room",
              "room"
            ]
          },
          {
            "TextList:": "enclosures"
          }
        ]
      ]
    },
    {
      "Pattern:provides:rules:": [
        "PrintLocaleTitle",
        [
          {
            "Text:kind:initially:": [
              "ceiling",
              "object",
              {
                "Get variable:": {
                  "Variable:dot:": [
                    "@enclosures",
                    [
                      {
                        "AtIndex:": {
                          "Len:": {
                            "FromTextList:": "@enclosures"
                          }
                        }
                      }
                    ]
                  ]
                }
              }
            ]
          }
        ],
        [
          {
            "PatternRule:does:": [
              true,
              [
                {
                  "If:does:else:": [
                    {
                      "Cmp:is:txt:": [
                        "@room",
                        "equal_to",
                        "@ceiling"
                      ]
                    },
                    [
                      {
                        "Say:": {
                          "RenderTemplate:": "{.ceiling}"
                        }
                      }
                    ],
                    {
                      "ElseDo does:": [
                        {
                          "Say:": {
                            "RenderTemplate:": "{The: .ceiling|capitalize!}"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:requires:": [
        "PrintLocaleSubtitle",
        [
          {
            "TextList:": "enclosures"
          }
        ]
      ]
    },
    {
      "Pattern:provides:rules:": [
        "PrintLocaleSubtitle",
        [
          {
            "Text:kind:initially:": [
              "ceiling",
              "object",
              {
                "Get variable:": {
                  "Variable:dot:": [
                    "@enclosures",
                    [
                      {
                        "AtIndex:": {
                          "Len:": {
                            "FromTextList:": "@enclosures"
                          }
                        }
                      }
                    ]
                  ]
                }
              }
            ]
          }
        ],
        [
          {
            "PatternRule:does:": [
              true,
              [
                {
                  "Repeating across:as:does:": [
                    {
                      "FromTextList:": "@enclosures"
                    },
                    "it",
                    [
                      {
                        "If:does:": [
                          {
                            "Cmp:is:txt:": [
                              "@it",
                              "equal_to",
                              "@ceiling"
                            ]
                          },
                          [
                            {
                              "Break": true
                            }
                          ]
                        ]
                      },
                      {
                        "Say:": {
                          "RenderTemplate:": " ({on: .it} {the: .it})"
                        }
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:requires:": [
        "PrintLocaleDescription",
        [
          {
            "Text:kind:": [
              "where",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "viewpoint",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "room",
              "room"
            ]
          }
        ]
      ]
    },
    {
      "Pattern:provides:rules:": [
        "PrintLocaleDescription",
        [
          {
            "TextList:initially:": [
              "kids",
              {
                "ChildrenOf obj:": {
                  "FromText:": {
                    "Text value:": "@where"
                  }
                }
              }
            ]
          },
          {
            "Number:initially:": [
              "previousMentions",
              {
                "Get object:": {
                  "Object:dot:": [
                    "settings",
                    [
                      {
                        "AtField:": "mentions"
                      }
                    ]
                  ]
                }
              }
            ]
          },
          {
            "TextList:": "remainingKids"
          }
        ],
        [
          {
            "PatternRule:does:": [
              true,
              [
                {
                  "If:does:": [
                    {
                      "Cmp:is:txt:": [
                        "@where",
                        "equal_to",
                        "@room"
                      ]
                    },
                    [
                      {
                        "Say:": {
                          "Get variable:": {
                            "Variable:dot:": [
                              "room",
                              [
                                {
                                  "AtField:": "description"
                                }
                              ]
                            ]
                          }
                        }
                      }
                    ]
                  ]
                },
                {
                  "SortTexts:byField:": [
                    {
                      "FromText:": "kids"
                    },
                    {
                      "FromText:": "grouping label"
                    }
                  ]
                },
                {
                  "Repeating across:as:does:": [
                    {
                      "FromTextList:": "@kids"
                    },
                    "it",
                    [
                      {
                        "Comment:": "exclude objects that enclose the viewpoint, those get their own locale descriptions"
                      },
                      {
                        "If:does:": [
                          {
                            "Not:": {
                              "AnyTrue:": [
                                {
                                  "Cmp:is:txt:": [
                                    "@it",
                                    "equal_to",
                                    "@viewpoint"
                                  ]
                                },
                                {
                                  "AncestorOf obj:root:": [
                                    {
                                      "FromText:": {
                                        "Text value:": "@viewpoint"
                                      }
                                    },
                                    {
                                      "FromText:": {
                                        "Text value:": "@it"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "IsPlayer obj:": {
                                    "FromText:": {
                                      "Text value:": "@it"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          [
                            {
                              "PrintObjectDescription obj:": {
                                "FromText:": {
                                  "Text value:": "@it"
                                }
                              }
                            },
                            {
                              "If:does:": [
                                {
                                  "AllTrue:": [
                                    {
                                      "Get object:": {
                                        "Object:field:": [
                                          "@it",
                                          "not mentioned"
                                        ]
                                      }
                                    },
                                    {
                                      "Get object:": {
                                        "Object:field:": [
                                          "@it",
                                          "not scenery"
                                        ]
                                      }
                                    }
                                  ]
                                },
                                [
                                  {
                                    "Push:into variable:": [
                                      {
                                        "FromText:": "@it"
                                      },
                                      "@remainingKids"
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                },
                {
                  "CanAlsoSee where:here:children:firstMention:": [
                    {
                      "FromText:": {
                        "Text value:": "@where"
                      }
                    },
                    {
                      "FromBool:": {
                        "Cmp:is:txt:": [
                          "@where",
                          "equal_to",
                          "@room"
                        ]
                      }
                    },
                    {
                      "FromTextList:": "@remainingKids"
                    },
                    {
                      "FromBool:": {
                        "Cmp:is:num:": [
                          "@previousMentions",
                          "equal_to",
                          {
                            "Get object:": {
                              "Object:dot:": [
                                "settings",
                                [
                                  {
                                    "AtField:": "mentions"
                                  }
                                ]
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Comment:": "prints the first impression of an object, and gives a chance for certain objects (ex. supporters) to say something more afterwards."
    },
    {
      "Pattern:requires:returns:": [
        "print object description",
        [
          {
            "Text:kind:": [
              "obj",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "locale",
              "object"
            ]
          }
        ],
        {
          "PatternResult:": {
            "Bool:": "success"
          }
        }
      ]
    },
    {
      "Pattern:rules:": [
        "print object description",
        [
          {
            "PatternRule:does:": [
              {
                "AllTrue:": [
                  {
                    "Get object:": {
                      "Object:field:": [
                        "@obj",
                        "mentioned"
                      ]
                    }
                  },
                  {
                    "KindOf:is:": [
                      "@obj",
                      "supporters"
                    ]
                  }
                ]
              },
              [
                {
                  "Comment:": [
                    "a. mentioned supporters",
                    "this prints \"on the...\" for any supporters mentioned by the scenery supporters rule or mentioned by the author."
                  ]
                },
                {
                  "PrintInlineStorage obj:": {
                    "FromText:": {
                      "Text value:": "@obj"
                    }
                  }
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              {
                "AllTrue:": [
                  {
                    "Get object:": {
                      "Object:field:": [
                        "@obj",
                        "scenery"
                      ]
                    }
                  },
                  {
                    "KindOf:is:": [
                      "@obj",
                      "supporters"
                    ]
                  }
                ]
              },
              [
                {
                  "Comment:": [
                    "b. scenery supporters ",
                    "this sets up supporters for use by the next rule in a way that's easy to disable by authors"
                  ]
                },
                {
                  "Mention obj:": {
                    "FromText:": {
                      "Text value:": "@obj"
                    }
                  }
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              {
                "Get object:": {
                  "Object:field:": [
                    "@obj",
                    "not mentioned"
                  ]
                }
              },
              [
                {
                  "Comment:": "c. print the impression of everything but actors ( note: by default, print impression prints objects with an initial appearance, and flags them as mentioned. )"
                },
                {
                  "PrintImpressionOf obj:locale:": [
                    {
                      "FromText:": {
                        "Text value:": "@obj"
                      }
                    },
                    {
                      "FromText:": {
                        "Text value:": "@locale"
                      }
                    }
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              {
                "KindOf:is:": [
                  "@obj",
                  "actors"
                ]
              },
              [
                {
                  "Comment:": "d. by default, we dont want to say anything special for actors"
                },
                {
                  "Set variable:from:": [
                    "@success",
                    {
                      "FromBool:": true
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:requires:returns:": [
        "PrintImpressionOf",
        [
          {
            "Text:kind:": [
              "obj",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "locale",
              "object"
            ]
          }
        ],
        {
          "PatternResult:": {
            "Bool:": "success"
          }
        }
      ]
    },
    {
      "Pattern:provides:rules:": [
        "PrintImpressionOf",
        [
          {
            "Bool:initially:": [
              "first look",
              {
                "AllTrue:": [
                  {
                    "Get object:": {
                      "Object:field:": [
                        "@obj",
                        "not mentioned"
                      ]
                    }
                  },
                  {
                    "Get object:": {
                      "Object:field:": [
                        "@obj",
                        "not scenery"
                      ]
                    }
                  },
                  {
                    "Not:": {
                      "Is empty:": {
                        "Get variable:": {
                          "Variable:dot:": [
                            "obj",
                            [
                              {
                                "AtField:": "initial appearance"
                              }
                            ]
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            ]
          }
        ],
        [
          {
            "PatternRule:does:": [
              {
                "AllTrue:": [
                  "@first look",
                  {
                    "Get object:": {
                      "Object:field:": [
                        "@obj",
                        "not mentioned"
                      ]
                    }
                  }
                ]
              },
              [
                {
                  "Say:": {
                    "RenderTemplate:": "{.obj.initial_appearance}"
                  }
                },
                {
                  "Mention obj:": {
                    "FromText:": {
                      "Text value:": "@obj"
                    }
                  }
                },
                {
                  "Set variable:from:": [
                    "@success",
                    {
                      "FromBool:": true
                    }
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              {
                "AllTrue:": [
                  {
                    "KindOf:is:": [
                      "@obj",
                      "supporters"
                    ]
                  },
                  {
                    "Cmp:is:txt:": [
                      {
                        "ParentOf obj:": {
                          "FromText:": {
                            "Text value:": "@obj"
                          }
                        }
                      },
                      "equal_to",
                      "@locale"
                    ]
                  }
                ]
              },
              [
                {
                  "Comment:": "we check where to stop recursion of supporters in supporters"
                },
                {
                  "Repeating across:as:does:": [
                    {
                      "FromTextList:": {
                        "ChildrenOf obj:": {
                          "FromText:": {
                            "Text value:": "@obj"
                          }
                        }
                      }
                    },
                    "it",
                    [
                      {
                        "PrintImpressionOf obj:": {
                          "FromText:": {
                            "Text value:": "@it"
                          }
                        }
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:requires:": [
        "CanAlsoSee",
        [
          {
            "Text:kind:": [
              "where",
              "object"
            ]
          },
          {
            "Bool:": "here"
          },
          {
            "TextList:": "children"
          },
          {
            "Bool:": "firstMention"
          }
        ]
      ]
    },
    {
      "Pattern:rules:": [
        "CanAlsoSee",
        [
          {
            "PatternRule:does:": [
              true,
              [
                {
                  "Say:": {
                    "Response:text:": [
                      "you can also see",
                      {
                        "RenderTemplate:": "{unless .here}{On: .where|capitalize!} {the: .where} you{else}{We!|capitalize!}{end} can {unless .firstMention}also {end}see {print_inline_objects: .children}."
                      }
                    ]
                  }
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:": "set everything unmentioned"
    },
    {
      "Pattern:rules:": [
        "set everything unmentioned",
        [
          {
            "PatternRule:does:": [
              true,
              [
                {
                  "Set object:from:": [
                    {
                      "Object:field:": [
                        "settings",
                        "mentions"
                      ]
                    },
                    {
                      "FromNumber:": 0
                    }
                  ]
                },
                {
                  "Repeating across:as:does:": [
                    {
                      "FromTextList:": {
                        "KindsOf:": "things"
                      }
                    },
                    "it",
                    [
                      {
                        "Set object:from:": [
                          {
                            "Object:field:": [
                              "@it",
                              "not mentioned"
                            ]
                          },
                          {
                            "FromBool:": true
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      ]
    }
  ]
}
