{
  "Tapestry:": [
    {
      "--": [
        "Traveling takes the actor moving, and the door for them to travel through.",
        "FIX: optionally pass the direction so that it doesnt have to find it twice when 'going'"
      ],
      "Define action:requires:": [
        "traveling",
        [
          {
            "--": "the actor traveling somewhere ( ex. the player. )",
            "Text:kind:": [
              "actor",
              "actor"
            ]
          },
          {
            "--": "the door being traveled through",
            "Text:kind:": [
              "door",
              "door"
            ]
          }
        ]
      ]
    },
    {
      "Rule for:provides:": [
        "traveling",
        [
          {
            "--": "Extract the destination from the door.",
            "Text:kind:initially:": [
              "destination",
              "room",
              {
                "Object:field:": [
                  "@door",
                  "destination"
                ]
              }
            ]
          },
          {
            "--": "Determine the direction, if any, traveling through the door.",
            "Text:initially:": [
              "direction",
              {
                "DirectionThrough room:door:": [
                  {
                    "FromText:": {
                      "ParentOf:": {
                        "FromText:": "@actor"
                      }
                    }
                  },
                  {
                    "FromText:": "@door"
                  }
                ]
              }
            ]
          }
        ]
      ]
    },
    {
      "Rule for:named:do:": [
        "before traveling",
        "standard traveling checks",
        {
          "If:assuming:do:else:": [
            {
              "Not:": {
                "Is empty:": "@resp"
              }
            },
            {
              "Arg:from:": [
                "resp",
                {
                  "FromText:": {
                    "CanReach actor:action:noun:": [
                      {
                        "FromText:": "@actor"
                      },
                      {
                        "FromText:": "traveling"
                      },
                      {
                        "FromText:": "@door"
                      }
                    ]
                  }
                }
              ]
            },
            [
              {
                "Print:": "@resp"
              }
            ],
            {
              "If:assuming:do:": [
                {
                  "Not:": {
                    "Is empty:": "@resp"
                  }
                },
                {
                  "Arg:from:": [
                    "resp",
                    {
                      "FromText:": {
                        "CanUse actor:action:noun:otherNoun:": [
                          {
                            "FromText:": "@actor"
                          },
                          {
                            "FromText:": "traveling"
                          },
                          {
                            "FromText:": "@door"
                          },
                          {
                            "FromText:": "@destination"
                          }
                        ]
                      }
                    }
                  ]
                },
                [
                  {
                    "Print:": "@resp"
                  }
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Rule for:do:": [
        "traveling",
        {
          "If:assuming:do:": [
            {
              "Not:": {
                "Is empty:": "@response"
              }
            },
            {
              "Arg:from:": [
                "response",
                {
                  "FromText:": {
                    "MoveObject obj:dest:": [
                      {
                        "FromText:": "@actor"
                      },
                      {
                        "FromText:": "@destination"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "Print:": "@response"
            }
          ]
        }
      ]
    },
    {
      "Rule for:do:": [
        "report someone traveling",
        {
          "Say response:with:": [
            "someone else travels",
            "{The: .actor|capitalize!} went through {the: .door}."
          ]
        }
      ]
    },
    {
      "Rule for:do:": [
        "report traveling",
        {
          "PrintVantage where:inDarkness:": [
            {
              "FromText:": {
                "ParentOf obj:": {
                  "FromText:": "@actor"
                }
              }
            },
            {
              "FromBool:": {
                "Object:field:": [
                  "@actor",
                  "is in darkness"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Rule for:do:": [
        "can use",
        {
          "If:do:": [
            {
              "AllTrue:": [
                {
                  "Cmp:is:txt:": [
                    "@action",
                    "equal_to",
                    "traveling"
                  ]
                },
                {
                  "Not:": {
                    "KindOf:is:": [
                      "@other_noun",
                      "rooms"
                    ]
                  }
                }
              ]
            },
            [
              {
                "Set:from:": [
                  "@response",
                  {
                    "FromText:": {
                      "Say response:with:": [
                        "can only travel to a destination",
                        "{They: .door|capitalize!} {dont:.door} lead anywhere."
                      ]
                    }
                  }
                ]
              }
            ]
          ]
        }
      ]
    },
    {
      "Rule for:do:": [
        "can use",
        {
          "If:do:": [
            {
              "AllTrue:": [
                {
                  "Cmp:is:txt:": [
                    "@action",
                    "equal_to",
                    "traveling"
                  ]
                },
                {
                  "Object:field:": [
                    "@noun",
                    "closed"
                  ]
                }
              ]
            },
            [
              {
                "Set:from:": [
                  "@response",
                  {
                    "FromText:": {
                      "Say response:with:": [
                        "can't travel through closed doors",
                        "{They: .noun|capitalize!} seem{unless .noun.plural_named}s{end} to be closed."
                      ]
                    }
                  }
                ]
              }
            ]
          ]
        }
      ]
    },
    {
      "Rule for:do:": [
        "can use",
        {
          "If:do:": [
            {
              "AllTrue:": [
                {
                  "Cmp:is:txt:": [
                    "@action",
                    "equal_to",
                    "traveling"
                  ]
                },
                {
                  "Object:field:": [
                    "@noun",
                    "closed"
                  ]
                },
                {
                  "Object:field:": [
                    "@noun",
                    "locked"
                  ]
                }
              ]
            },
            [
              {
                "Set:from:": [
                  "@response",
                  {
                    "FromText:": {
                      "Say response:with:": [
                        "can't travel through locked doors",
                        "{They: .noun|capitalize!} seem{unless .noun.plural_named}s{end} to be locked."
                      ]
                    }
                  }
                ]
              }
            ]
          ]
        }
      ]
    }
  ]
}
