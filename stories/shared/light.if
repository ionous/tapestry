{
  "Tapestry:": [
    {
      "Pattern:requires:returns:": [
        "fully opaque",
        [
          {
            "Text:kind:": [
              "obj",
              "object"
            ]
          }
        ],
        {
          "PatternResult:": {
            "Bool:": "result"
          }
        }
      ]
    },
    {
      "Comment:": "Returns true if light gets stopped when passing from inside an object to outside an object. Note that \"lit\" objects emit light from all of their surfaces, so while a closed box might not reveal a flashlight locked inside, a glowing haunted treasure chest would illuminate its contents and the room it's in. "
    },
    {
      "Pattern:rules:": [
        "fully opaque",
        [
          {
            "PatternRule:does:": [
              {
                "Always": true
              },
              [
                {
                  "Let:be:": [
                    "result",
                    {
                      "FromBool:": false
                    }
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              {
                "AllTrue:": [
                  {
                    "KindOf:is:": [
                      "@obj",
                      "containers"
                    ]
                  },
                  {
                    "Get obj:trait:": [
                      "@obj",
                      "opaque"
                    ]
                  },
                  {
                    "Get obj:trait:": [
                      "@obj",
                      "closed"
                    ]
                  }
                ]
              },
              [
                {
                  "Let:be:": [
                    "result",
                    {
                      "FromBool:": true
                    }
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              {
                "KindOf:is:": [
                  "@obj",
                  "rooms"
                ]
              },
              [
                {
                  "Comment:": "a room is the top of line."
                },
                {
                  "Let:be:": [
                    "result",
                    {
                      "FromBool:": true
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:requires:returns:": [
        "transparentOf",
        [
          {
            "Text:kind:": [
              "obj",
              "object"
            ]
          }
        ],
        {
          "PatternResult:": {
            "Text:kind:": [
              "result",
              "object"
            ]
          }
        }
      ]
    },
    {
      "Pattern:provides:rules:": [
        "transparentOf",
        [
          {
            "Text:kind:initially:": [
              "parent",
              "object",
              {
                "ParentOf obj:": {
                  "FromTxt:": "@obj"
                }
              }
            ]
          }
        ],
        [
          {
            "PatternRule:does:": [
              {
                "Always": true
              },
              [
                {
                  "Comment:": "normally the parent is just the parent."
                },
                {
                  "Let:be:": [
                    "result",
                    {
                      "FromTxt:": "@parent"
                    }
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              {
                "FullyOpaque obj:": "@obj"
              },
              [
                {
                  "Comment:": "for example: if our object is a closed, opaque, container, dont return anything."
                },
                {
                  "Let:be:": [
                    "result",
                    {
                      "FromTxt:": ""
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:requires:returns:": [
        "transparentList",
        [
          {
            "Text:kind:": [
              "obj",
              "object"
            ]
          }
        ],
        {
          "PatternResult:": {
            "TextList:": "list"
          }
        }
      ]
    },
    {
      "Comment:": "Return a list containing the object and all of its transparent parents. "
    },
    {
      "Pattern:rules:": [
        "transparentList",
        [
          {
            "PatternRule:does:": [
              {
                "Always": true
              },
              [
                {
                  "Repeating:does:": [
                    {
                      "Not:": {
                        "Is empty:": "@obj"
                      }
                    },
                    [
                      {
                        "Put:into:": [
                          "@obj",
                          {
                            "IntoTxts:": "list"
                          }
                        ]
                      },
                      {
                        "Let:be:": [
                          "obj",
                          {
                            "FromTxt:": {
                              "TransparentOf obj:": {
                                "FromTxt:": "@obj"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:requires:returns:": [
        "contains light",
        [
          {
            "Text:kind:": [
              "spot",
              "object"
            ]
          }
        ],
        {
          "PatternResult:": {
            "Bool:": "result"
          }
        }
      ]
    },
    {
      "Comment:": "Returns true if the passed spot is illuminated ( because of its own light, or because of the light of some nearby objet. ) This roughly correlates to Inform's \"offers light\" routine."
    },
    {
      "Pattern:provides:rules:": [
        "contains light",
        [
          {
            "TextList:": "queue"
          },
          {
            "Text:": "ceiling"
          }
        ],
        [
          {
            "PatternRule:does:": [
              {
                "Always": true
              },
              [
                {
                  "Comment:": "Determine the ceiling, and add it to the queue for processing."
                },
                {
                  "Repeating:does:": [
                    {
                      "Not:": {
                        "Is empty:": "@spot"
                      }
                    },
                    [
                      {
                        "Let:be:": [
                          "ceiling",
                          "@spot"
                        ]
                      },
                      {
                        "Let:be:": [
                          "spot",
                          {
                            "FromTxt:": {
                              "TransparentOf obj:": "@spot"
                            }
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Put:into:": [
                    "@ceiling",
                    {
                      "IntoTxts:": "queue"
                    }
                  ]
                },
                {
                  "Repeating:does:": [
                    {
                      "Cmp:is:num:": [
                        {
                          "Len:": "@queue"
                        },
                        "greater_than",
                        0
                      ]
                    },
                    [
                      {
                        "Erasing:as:does:": [
                          {
                            "VarOfTxts:": "queue"
                          },
                          "it",
                          [
                            {
                              "Comment:": "objects which generate light are considered to be bright both inside and out; all of their surfaces aglow."
                            },
                            {
                              "If:does:else:": [
                                {
                                  "Get obj:trait:": [
                                    "@it",
                                    "lit"
                                  ]
                                },
                                [
                                  {
                                    "Let:be:": [
                                      "result",
                                      {
                                        "FromBool:": true
                                      }
                                    ]
                                  },
                                  {
                                    "Break": true
                                  }
                                ],
                                {
                                  "ElseIf:does:": [
                                    {
                                      "AnyTrue:": [
                                        {
                                          "Cmp:is:txt:": [
                                            "@it",
                                            "equal_to",
                                            "@ceiling"
                                          ]
                                        },
                                        {
                                          "Not:": {
                                            "FullyOpaque obj:": "@it"
                                          }
                                        }
                                      ]
                                    },
                                    [
                                      {
                                        "Comment:": "Any children of our ceiling will be considered for their light contributions, even if the ceiling wouldn't transmit that light outward. "
                                      },
                                      {
                                        "Put:into:": [
                                          {
                                            "FromTxts:": {
                                              "ChildrenOf obj:": "@it"
                                            }
                                          },
                                          {
                                            "IntoTxts:": "queue"
                                          }
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      ]
    }
  ]
}
