{
  "Tapestry:": [
    {
      "--": "Determine whether an actor can touch some specific object.",
      "Pattern:requires:returns:": [
        "can reach",
        [
          {
            "Text:kind:": [
              "actor",
              "actor"
            ]
          },
          {
            "Text:": "action"
          },
          {
            "--": "the target the agent is trying to reach",
            "Text:kind:": [
              "noun",
              "thing"
            ]
          },
          {
            "Bool:": "requires light"
          }
        ],
        {
          "PatternResult:": {
            "Text:": "response"
          }
        }
      ]
    },
    {
      "Pattern:provides:rules:": [
        "can reach",
        [
          {
            "Text:kind:": [
              "i",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "next",
              "object"
            ]
          },
          {
            "Text:": "dig error"
          },
          {
            "Number:": "lca"
          },
          {
            "Text:": "reach response"
          },
          {
            "Number:": "reach error"
          },
          {
            "TextList:": "path"
          }
        ],
        [
          {
            "PatternRule:does:": [
              true,
              [
                {
                  "Set variable:from:": [
                    "@i",
                    {
                      "FromText:": "@actor"
                    }
                  ]
                },
                {
                  "Repeating:does:": [
                    {
                      "Not:": {
                        "Is empty:": "@i"
                      }
                    },
                    [
                      {
                        "Comment:": "There's no problem reaching yourself, so start by putting yourself in the list of visited places."
                      },
                      {
                        "Push:into variable:": [
                          {
                            "FromText:": "@i"
                          },
                          "@path"
                        ]
                      },
                      {
                        "Set variable:from:": [
                          "@next",
                          {
                            "FromText:": {
                              "ParentOf obj:": {
                                "FromText:": {
                                  "Text value:": "@i"
                                }
                              }
                            }
                          }
                        ]
                      },
                      {
                        "If:does:": [
                          {
                            "Is empty:": "@reach response"
                          },
                          [
                            {
                              "Comment:": "Reach can only reject pairs. To force the acceptance of some particular source/target pair, reaching itself has to be customized. "
                            },
                            {
                              "If:from:and:does:": [
                                "response",
                                {
                                  "FromText:": {
                                    "ReachUp fromObj:intoObj:actor:noun:action:": [
                                      {
                                        "FromText:": {
                                          "Text value:": "@i"
                                        }
                                      },
                                      {
                                        "FromText:": {
                                          "Text value:": "@next"
                                        }
                                      },
                                      {
                                        "FromText:": {
                                          "Text value:": "@actor"
                                        }
                                      },
                                      {
                                        "FromText:": {
                                          "Text value:": "@noun"
                                        }
                                      },
                                      {
                                        "FromText:": {
                                          "Text value:": "@action"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "Not:": {
                                    "Is empty:": "@response"
                                  }
                                },
                                [
                                  {
                                    "Set variable:from:": [
                                      "@reach error",
                                      {
                                        "FromNumber:": {
                                          "Len:": {
                                            "FromTextList:": "@path"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "Set variable:from:": [
                                      "@reach response",
                                      {
                                        "FromText:": "@response"
                                      }
                                    ]
                                  },
                                  {
                                    "Comment:": [
                                      "This doesn't exit the loop. ",
                                      "It builds a complete hierarchy to help determine if the lca exists and if so, is the lca completely unreachable or merely blocked."
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Set variable:from:": [
                          "@i",
                          {
                            "FromText:": "@next"
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Comment:": "Simulate digging down from the (yet to be determined) lca by digging up from the target noun (until we find the lca.)"
                },
                {
                  "Log:": {
                    "FromTextList:": "@path"
                  }
                },
                {
                  "Set variable:from:": [
                    "@i",
                    {
                      "FromText:": "@noun"
                    }
                  ]
                },
                {
                  "Repeating:does:": [
                    {
                      "Not:": {
                        "Is empty:": "@i"
                      }
                    },
                    [
                      {
                        "Set variable:from:": [
                          "@lca",
                          {
                            "FromNumber:": {
                              "Find:list:": [
                                {
                                  "FromText:": {
                                    "Text value:": "@i"
                                  }
                                },
                                {
                                  "FromText:": {
                                    "Text value:": "@path"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "If:does:": [
                          {
                            "Cmp:is:num:": [
                              "@lca",
                              "greater_than",
                              0
                            ]
                          },
                          [
                            {
                              "Comment:": "Exit once we've found the lca."
                            },
                            {
                              "Break": true
                            }
                          ]
                        ]
                      },
                      {
                        "Set variable:from:": [
                          "@next",
                          {
                            "FromText:": {
                              "ParentOf obj:": {
                                "FromText:": {
                                  "Text value:": "@i"
                                }
                              }
                            }
                          }
                        ]
                      },
                      {
                        "If:from:and:does:": [
                          "response",
                          {
                            "FromText:": {
                              "ReachDown fromObj:intoObj:actor:noun:action:": [
                                {
                                  "FromText:": {
                                    "Text value:": "@next"
                                  }
                                },
                                {
                                  "FromText:": {
                                    "Text value:": "@i"
                                  }
                                },
                                {
                                  "FromText:": {
                                    "Text value:": "@actor"
                                  }
                                },
                                {
                                  "FromText:": {
                                    "Text value:": "@noun"
                                  }
                                },
                                {
                                  "FromText:": {
                                    "Text value:": "@action"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "Not:": {
                              "Is empty:": "@response"
                            }
                          },
                          [
                            {
                              "Set variable:from:": [
                                "@dig error",
                                {
                                  "FromText:": "@response"
                                }
                              ]
                            },
                            {
                              "Comment:": [
                                "To find the outermost dig error keep going, ",
                                "updating the error each time."
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Set variable:from:": [
                          "@i",
                          {
                            "FromText:": "@next"
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Comment:": "Return the best response."
                },
                {
                  "If:does:else:": [
                    {
                      "Cmp:is:num:": [
                        "@lca",
                        "equal_to",
                        0
                      ]
                    },
                    [
                      {
                        "Comment:": "No lca ever found? That's the most important error."
                      },
                      {
                        "Set variable:from:": [
                          "@response",
                          {
                            "FromText:": {
                              "Response:text:": [
                                "can't reach a common ancestor",
                                {
                                  "RenderTemplate:": "{They:.noun|capitalize!} {arent:.noun} available."
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    {
                      "ElseIf:does:else:": [
                        {
                          "Cmp:is:num:": [
                            "@reach error",
                            "less_than",
                            "@lca"
                          ]
                        },
                        [
                          {
                            "Comment:": "There is an error reaching up from the actor towards the lca."
                          },
                          {
                            "Set variable:from:": [
                              "@response",
                              {
                                "FromText:": "@reach response"
                              }
                            ]
                          }
                        ],
                        {
                          "ElseIf:does:": [
                            {
                              "Not:": {
                                "Is empty:": "@dig error"
                              }
                            },
                            [
                              {
                                "Comment:": "There was no error reaching up to the lca, so return any errors digging down to the noun."
                              },
                              {
                                "Set variable:from:": [
                                  "@response",
                                  {
                                    "FromText:": "@dig error"
                                  }
                                ]
                              }
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:flags:does:": [
              {
                "AllTrue:": [
                  "@requires light",
                  {
                    "Get variable:": {
                      "Variable:dot:": [
                        "actor",
                        [
                          {
                            "AtField:": "is in darkness"
                          }
                        ]
                      ]
                    }
                  }
                ]
              },
              "after",
              [
                {
                  "Comment:": "Used to determine whether an action needing light can proceed. Returns some response text if the action is blocked.  Relies on the player's \"is in darkness\" which is (usually) calculated just once per turn ( in \"adjust light.\" )"
                },
                {
                  "Set variable:from:": [
                    "@response",
                    {
                      "FromText:": {
                        "Response:text:": [
                          "can't act in the dark",
                          {
                            "RenderTemplate:": "It is pitch dark, and {we!} can't see a thing."
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:requires:returns:": [
        "reach up",
        [
          {
            "Text:kind:": [
              "fromObj",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "intoObj",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "actor",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "noun",
              "object"
            ]
          },
          {
            "Text:": "action"
          }
        ],
        {
          "PatternResult:": {
            "Text:": "response"
          }
        }
      ]
    },
    {
      "Pattern:rules:": [
        "reach up",
        [
          {
            "PatternRule:does:": [
              {
                "AllTrue:": [
                  {
                    "KindOf:is:": [
                      "@fromObj",
                      "containers"
                    ]
                  },
                  {
                    "Get object:": {
                      "Object:field:": [
                        "@fromObj",
                        "closed"
                      ]
                    }
                  }
                ]
              },
              [
                {
                  "Set variable:from:": [
                    "@response",
                    {
                      "FromText:": {
                        "Response:text:": [
                          "can't reach outside closed containers",
                          {
                            "RenderTemplate:": "{The: .fromObj|capitalize!} {arent: .fromObj} open."
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              {
                "KindOf:is:": [
                  "@fromObj",
                  "rooms"
                ]
              },
              [
                {
                  "Set variable:from:": [
                    "@response",
                    {
                      "FromText:": {
                        "Response:text:": [
                          "can't reach outside rooms",
                          {
                            "RenderTemplate:": "{They:.noun|capitalize!} {arent:.noun} available."
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              true,
              [
                {
                  "Log:": {
                    "FromText:": {
                      "RenderTemplate:": "reach up: from:{.fromObj} -> into:{.intoObj}"
                    }
                  }
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Pattern:requires:returns:": [
        "reach down",
        [
          {
            "Text:kind:": [
              "fromObj",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "intoObj",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "actor",
              "object"
            ]
          },
          {
            "Text:kind:": [
              "noun",
              "object"
            ]
          },
          {
            "Text:": "action"
          }
        ],
        {
          "PatternResult:": {
            "Text:": "response"
          }
        }
      ]
    },
    {
      "Pattern:rules:": [
        "reach down",
        [
          {
            "PatternRule:does:": [
              {
                "AllTrue:": [
                  {
                    "KindOf:is:": [
                      "@intoObj",
                      "containers"
                    ]
                  },
                  {
                    "Get object:": {
                      "Object:field:": [
                        "@intoObj",
                        "closed"
                      ]
                    }
                  },
                  {
                    "Not:": {
                      "Cmp:is:txt:": [
                        "@intoObj",
                        "equal_to",
                        "@noun"
                      ]
                    }
                  }
                ]
              },
              [
                {
                  "Set variable:from:": [
                    "@response",
                    {
                      "FromText:": {
                        "Response:text:": [
                          "can't reach inside closed containers",
                          {
                            "RenderTemplate:": "{The: .intoObj|capitalize!} {arent: .intoObj} open."
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              {
                "KindOf:is:": [
                  "@intoObj",
                  "rooms"
                ]
              },
              [
                {
                  "Set variable:from:": [
                    "@response",
                    {
                      "FromText:": {
                        "Response:text:": [
                          "can't reach inside rooms",
                          {
                            "RenderTemplate:": "{We:|capitalize!} can't reach into {the: .intoObj}."
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:does:": [
              true,
              [
                {
                  "Log:": {
                    "FromText:": {
                      "RenderTemplate:": "reach down: from:{.fromObj} -> into:{.intoObj}"
                    }
                  }
                }
              ]
            ]
          }
        ]
      ]
    }
  ]
}
