{
  "Tapestry:": [
    {
      "Define action:requires:": [
        "activating",
        [
          {
            "--": "the actor activating something ( ex. the player. )",
            "Text:kind:": [
              "actor",
              "actor"
            ]
          },
          {
            "--": "the thing being activated",
            "Text:kind:": [
              "noun",
              "thing"
            ]
          }
        ]
      ]
    },
    {
      "Define rule:named:do:": [
        "instead of activating",
        "the standard activating checks",
        [
          {
            "If:assuming:do:else:": [
              {
                "Not:": {
                  "Is empty:": "@response"
                }
              },
              {
                "Arg:from:": [
                  "response",
                  {
                    "FromText:": {
                      "CanReach actor:action:noun:": [
                        {
                          "FromText:": "@actor"
                        },
                        {
                          "FromText:": "activating"
                        },
                        {
                          "FromText:": "@noun"
                        }
                      ]
                    }
                  }
                ]
              },
              [
                {
                  "Print:": "@response"
                }
              ],
              {
                "If:assuming:do:": [
                  {
                    "Not:": {
                      "Is empty:": "@response"
                    }
                  },
                  {
                    "Arg:from:": [
                      "response",
                      {
                        "FromText:": {
                          "CanUse actor:action:noun:": [
                            {
                              "FromText:": "@actor"
                            },
                            {
                              "FromText:": "activating"
                            },
                            {
                              "FromText:": "@noun"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "Print:": "@response"
                  }
                ]
              }
            ]
          }
        ]
      ]
    },
    {
      "Define rule:named:do:": [
        "activating",
        "the standard activating action",
        {
          "If:do:": [
            {
              "StateChanging noun:actor:trait:guard:change:": [
                {
                  "FromText:": "@noun"
                },
                {
                  "FromText:": "@actor"
                },
                {
                  "FromText:": "activated"
                },
                {
                  "FromText:": "activatable"
                },
                {
                  "FromText:": "switch on"
                }
              ]
            },
            {
              "--": "Continue on to the next event phase"
            }
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Define action:requires:": [
        "deactivating",
        [
          {
            "--": "the actor deactivating ( ex. the player. ) something",
            "Text:kind:": [
              "actor",
              "actor"
            ]
          },
          {
            "--": "the thing being deactivated",
            "Text:kind:": [
              "noun",
              "thing"
            ]
          }
        ]
      ]
    },
    {
      "Define rule:named:do:": [
        "instead of deactivating",
        "the standard deactivating checks",
        {
          "If:assuming:do:else:": [
            {
              "Not:": {
                "Is empty:": "@response"
              }
            },
            {
              "Arg:from:": [
                "response",
                {
                  "FromText:": {
                    "CanReach actor:action:noun:": [
                      {
                        "FromText:": "@actor"
                      },
                      {
                        "FromText:": "deactivating"
                      },
                      {
                        "FromText:": "@noun"
                      }
                    ]
                  }
                }
              ]
            },
            [
              {
                "Print:": "@response"
              }
            ],
            {
              "If:assuming:do:": [
                {
                  "Not:": {
                    "Is empty:": "@response"
                  }
                },
                {
                  "Arg:from:": [
                    "response",
                    {
                      "FromText:": {
                        "CanUse actor:action:noun:": [
                          {
                            "FromText:": "@actor"
                          },
                          {
                            "FromText:": "deactivating"
                          },
                          {
                            "FromText:": "@noun"
                          }
                        ]
                      }
                    }
                  ]
                },
                [
                  {
                    "Print:": "@response"
                  }
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "Define rule:named:do:": [
        "deactivating",
        "the standard deactivating action",
        {
          "If:do:": [
            {
              "StateChanging noun:actor:trait:guard:change:": [
                {
                  "FromText:": "@noun"
                },
                {
                  "FromText:": "@actor"
                },
                {
                  "FromText:": "deactivated"
                },
                {
                  "FromText:": "activatable"
                },
                {
                  "FromText:": "switch off"
                }
              ]
            },
            {
              "--": "Continue on to the next event phase"
            }
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Declare:": "Devices are a kind of prop."
    },
    {
      "Define kind:fields:": [
        "Devices",
        [
          {
            "Aspect:": "activatability"
          },
          {
            "Aspect:": "activation"
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Declare:": "Activatability is a kind of aspect."
    },
    {
      "Define traits:as:": [
        [
          "activatable",
          "not activatable"
        ],
        "activatability"
      ]
    },
    {
      "Declare:": "Activation is a kind of aspect."
    },
    {
      "Define traits:as:": [
        [
          "deactivated",
          "activated"
        ],
        "activation"
      ]
    }
  ]
}
