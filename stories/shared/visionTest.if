{
  "Tapestry:": [
    {
      "Test:dependsOn:withScene:do:": [
        "vision testing",
        "Kitchenette",
        [
          {
            "--": "fix: i think the news doesnt need a full pattern. but we need to be able to replace responses.",
            "Define rule:do:": [
              "Print news of light",
              {
                "Print:": "The light, it burns."
              }
            ]
          }
        ],
        [
          {
            "Comment:": "Initialize the story as if we had started a game."
          },
          {
            "StartGame actor:quietly:": [
              {
                "FromText:": {
                  "Object:field:": [
                    "player",
                    "pawn"
                  ]
                }
              },
              {
                "FromBool:": true
              }
            ]
          },
          {
            "--": "update should set the actor to is illuminated",
            "Expect:": {
              "Object:field:dot:": [
                "self",
                "lighting",
                {
                  "AtField:": "is illuminated"
                }
              ]
            }
          },
          {
            "--": "update should set the story's cache",
            "Expect:": {
              "Object:field:": [
                "story",
                "is illuminated"
              ]
            }
          },
          {
            "--": "asking through the pattern should also be fine.",
            "Expect:": {
              "Illuminates actor:": {
                "FromText:": "self"
              }
            }
          },
          {
            "Comment:": [
              "Change the kitchen lighting, update time, and verify the game prints the arrival of darkness."
            ]
          },
          {
            "Set:trait:": [
              "kitchen",
              "unlit"
            ]
          },
          {
            "PassTime": true
          },
          {
            "--": "update should set the actor to not is illuminated",
            "Expect:": {
              "Object:field:dot:": [
                "self",
                "lighting",
                {
                  "AtField:": "not illuminated"
                }
              ]
            }
          },
          {
            "--": "update should set the story to not is illuminated",
            "Expect:": {
              "Object:field:": [
                "story",
                "not illuminated"
              ]
            }
          },
          {
            "--": "asking through the pattern should also be fine.",
            "Expect:": {
              "Not:": {
                "Illuminates actor:": {
                  "FromText:": "self"
                }
              }
            }
          },
          {
            "Expect output:": "It is now pitch dark in here!"
          },
          {
            "Comment:": "Verify that light breaks forth in a glorious wonder."
          },
          {
            "Set:trait:": [
              "kitchen",
              "lit"
            ]
          },
          {
            "PassTime": true
          },
          {
            "Expect output:": "The light, it burns."
          }
        ]
      ]
    }
  ]
}
