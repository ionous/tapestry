{
  "Tapestry:": [
    {
      "Define action:requires:": [
        "storing into",
        [
          {
            "--": "the actor storing something ( ex. the player. )",
            "Text:kind:": [
              "actor",
              "actor"
            ]
          },
          {
            "--": "the thing being stored",
            "Text:kind:": [
              "noun",
              "thing"
            ]
          },
          {
            "--": "the thing where the noun is being stored",
            "Text:kind:": [
              "other noun",
              "thing"
            ]
          }
        ]
      ]
    },
    {
      "Define rule:named:do:": [
        "instead of storing into",
        "the standard storing checks",
        {
          "If:assuming:do:else:": [
            {
              "Not:": {
                "Is empty:": "@response"
              }
            },
            {
              "Arg:from:": [
                "response",
                {
                  "FromText:": {
                    "CanHandle actor:action:noun:otherNoun:": [
                      {
                        "FromText:": "@actor"
                      },
                      {
                        "FromText:": "storing into"
                      },
                      {
                        "FromText:": "@noun"
                      },
                      {
                        "FromText:": "@other_noun"
                      }
                    ]
                  }
                }
              ]
            },
            [
              {
                "Print:": "@response"
              }
            ],
            {
              "If:assuming:do:else:": [
                {
                  "Not:": {
                    "Is empty:": "@response"
                  }
                },
                {
                  "Arg:from:": [
                    "response",
                    {
                      "FromText:": {
                        "CanReach actor:action:noun:": [
                          {
                            "FromText:": "@actor"
                          },
                          {
                            "FromText:": "storing into"
                          },
                          {
                            "FromText:": "@other_noun"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "Print:": "@response"
                },
                {
                  "If:assuming:do:": [
                    {
                      "Not:": {
                        "Is empty:": "@response"
                      }
                    },
                    {
                      "Arg:from:": [
                        "response",
                        {
                          "FromText:": {
                            "CanUse actor:action:noun:otherNoun:": [
                              {
                                "FromText:": "@actor"
                              },
                              {
                                "FromText:": "storing into"
                              },
                              {
                                "FromText:": "@noun"
                              },
                              {
                                "FromText:": "@other_noun"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Print:": "@response"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "Define rule:named:do:": [
        "storing into",
        "the standard storing action",
        {
          "If:assuming:do:": [
            {
              "Not:": {
                "Is empty:": "@response"
              }
            },
            {
              "Arg:from:": [
                "response",
                {
                  "FromText:": {
                    "MoveObject obj:dest:": [
                      {
                        "FromText:": "@noun"
                      },
                      {
                        "FromText:": "@other_noun"
                      }
                    ]
                  }
                }
              ]
            },
            [
              {
                "Print:": "@response"
              }
            ]
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Define rule:do:": [
        "report someone storing into",
        {
          "Say response:with:": [
            "someone stores",
            "{The: .actor|capitalize!} put {the: .noun} {on:.other_noun} {the: .other_noun}."
          ]
        }
      ]
    },
    {
      "Define rule:do:": [
        "report storing into",
        {
          "Say response:with:": [
            "player stores",
            "{We:|capitalize!} put {the: .noun} {on:.other_noun} {the: .other_noun}."
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Define rule:do:": [
        "can handle",
        {
          "If:do:": [
            {
              "AllTrue:": [
                {
                  "Cmp:is:txt:": [
                    "@action",
                    "equal_to",
                    "storing into"
                  ]
                },
                {
                  "AncestorOf obj:root:": [
                    {
                      "FromText:": "@other_noun"
                    },
                    {
                      "FromText:": "@noun"
                    }
                  ]
                }
              ]
            },
            [
              {
                "Set:from:": [
                  "@response",
                  {
                    "FromText:": {
                      "Say response:with:": [
                        "can't insert something into itself",
                        "{We:|capitalize!} can't put  {those:.noun} {on:.other_noun} itself."
                      ]
                    }
                  }
                ]
              },
              {
                "Comment:": "trying to put the noun into the other noun, but the other noun is on or in the noun. ( ex. can't put a backpack into a purse that's inside the backpack. )"
              }
            ]
          ]
        }
      ]
    },
    {
      "Define rule:do:": [
        "can handle",
        {
          "If:do:": [
            {
              "AllTrue:": [
                {
                  "Cmp:is:txt:": [
                    "@action",
                    "equal_to",
                    "storing into"
                  ]
                },
                {
                  "Cmp:is:txt:": [
                    {
                      "WearerOf obj:": {
                        "FromText:": "@noun"
                      }
                    },
                    "equal_to",
                    "@actor"
                  ]
                }
              ]
            },
            [
              {
                "Set:from:": [
                  "@response",
                  {
                    "FromText:": {
                      "Say response:with:": [
                        "can't insert clothing",
                        "{We:|capitalize!} would have to take {those:.noun} off first."
                      ]
                    }
                  }
                ]
              }
            ]
          ]
        }
      ]
    },
    {
      "--": ""
    },
    {
      "Define rule:do:": [
        "reach down",
        {
          "--": "Assuming we are able to reach the noun, check whether it actually allows storage right now. ( ex. open, not closed. )",
          "If:do:": [
            {
              "AllTrue:": [
                {
                  "Cmp:is:txt:": [
                    "@action",
                    "equal_to",
                    "storing into"
                  ]
                },
                {
                  "Cmp:is:txt:": [
                    "@into_obj",
                    "equal_to",
                    "@noun"
                  ]
                },
                {
                  "Not:": {
                    "AllowsStorage obj:": {
                      "FromText:": "@into_obj"
                    }
                  }
                }
              ]
            },
            {
              "Set:from:": [
                "@response",
                {
                  "FromText:": {
                    "Say response:with:": [
                      "can only store when allowed",
                      "{the: .into_obj|capitalize!} is closed."
                    ]
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "Define rule:do:": [
        "reach down",
        {
          "If:do:": [
            {
              "AllTrue:": [
                {
                  "Cmp:is:txt:": [
                    "@action",
                    "equal_to",
                    "storing into"
                  ]
                },
                {
                  "Cmp:is:txt:": [
                    "@into_obj",
                    "equal_to",
                    "@noun"
                  ]
                },
                {
                  "Not:": {
                    "ProvidesStorage obj:": {
                      "FromText:": "@into_obj"
                    }
                  }
                }
              ]
            },
            [
              {
                "Comment:": "Assuming we are able to reach the noun, check whether it actually provides storage."
              },
              {
                "Set:from:": [
                  "@response",
                  {
                    "FromText:": {
                      "Say response:with:": [
                        "can only store to storage",
                        "{the: .from_obj|capitalize!} can't {contain:.from_obj} things."
                      ]
                    }
                  }
                ]
              }
            ]
          ]
        }
      ]
    },
    {
      "Define rule:do:": [
        "reach down",
        {
          "If:do:": [
            {
              "AllTrue:": [
                {
                  "Cmp:is:txt:": [
                    "@action",
                    "equal_to",
                    "storing into"
                  ]
                },
                {
                  "KindOf:is:": [
                    "@into_obj",
                    "actors"
                  ]
                }
              ]
            },
            [
              {
                "Comment:": [
                  "If the target noun were owned by reaching actor then the actor would be the lca.",
                  "By checking \"reach down\" we are checking *below* the lca so it would have to be some other actor's possessions we are trying to reach."
                ]
              },
              {
                "Set:from:": [
                  "@response",
                  {
                    "FromText:": {
                      "Say response:with:": [
                        "can't store people's possessions",
                        "{those: .noun|capitalize!} seems to belong to {the: .into_obj}."
                      ]
                    }
                  }
                ]
              }
            ]
          ]
        }
      ]
    }
  ]
}
