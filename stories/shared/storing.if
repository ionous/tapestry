{
  "Tapestry:": [
    {
      "Event:action:args dual:": [
        "store into",
        "storing into",
        {
          "PairedAction:": "things"
        }
      ]
    },
    {
      "Extend pattern:provides:withRules:": [
        "storing into",
        [
          {
            "Text:kind:initially:": [
              "actor",
              "actor",
              {
                "Object:field:": [
                  "@agent",
                  "pawn"
                ]
              }
            ]
          }
        ],
        [
          {
            "PatternRule:do:": [
              {
                "IsPlayer obj:": {
                  "FromText:": "@actor"
                }
              },
              [
                {
                  "Comment:": "First, we need to make sure we can use the first noun:"
                },
                {
                  "Log:value:": [
                    "debug",
                    {
                      "FromText:": {
                        "Say:": "{.actor} storing {the:.noun} to {the:.other_noun}."
                      }
                    }
                  ]
                },
                {
                  "If:assuming:do:else:": [
                    {
                      "Not:": {
                        "Is empty:": "@result"
                      }
                    },
                    {
                      "Arg:from:": [
                        "result",
                        {
                          "FromText:": {
                            "CanHandle actor:action:noun:otherNoun:": [
                              {
                                "FromText:": "@actor"
                              },
                              {
                                "FromText:": "storing into"
                              },
                              {
                                "FromText:": "@noun"
                              },
                              {
                                "FromText:": "@other_noun"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    [
                      {
                        "Print:": "@result"
                      }
                    ],
                    {
                      "Finally do:": [
                        {
                          "Comment:": "Then, we need to make sure we can reach the other noun:"
                        },
                        {
                          "If:assuming:do:else:": [
                            
                            {
                              "Not:": {
                                "Is empty:": "@result"
                              }
                            },
                            {
                              "Arg:from:": [
                                "result",
                                {
                                  "FromText:": {
                                    "CanReach actor:action:noun:": [
                                      {
                                        "FromText:": "@actor"
                                      },
                                      {
                                        "FromText:": "storing into"
                                      },
                                      {
                                        "FromText:": "@other_noun"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            [
                              {
                                "Print:": "@result"
                              }
                            ],
                            {
                              "Finally do:": [
                                {
                                  "If:assuming:do:else:": [
                                    {
                                      "Not:": {
                                        "Is empty:": "@result"
                                      }
                                    },
                                    {
                                      "Arg:from:": [
                                        "result",
                                        {
                                          "FromText:": {
                                            "CanUse actor:action:noun:otherNoun:": [
                                              {
                                                "FromText:": "@actor"
                                              },
                                              {
                                                "FromText:": "storing into"
                                              },
                                              {
                                                "FromText:": "@noun"
                                              },
                                              {
                                                "FromText:": "@other_noun"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    [
                                      {
                                        "Print:": "@result"
                                      }
                                    ],
                                    {
                                      "Finally do:": [
                                        {
                                          "If:do:": [
                                            {
                                              "Send:event:": [
                                                {
                                                  "Capture obj:": {
                                                    "FromText:": "@noun"
                                                  }
                                                },
                                                {
                                                  "StoreInto actor:noun:otherNoun:": [
                                                    {
                                                      "FromText:": "@actor"
                                                    },
                                                    {
                                                      "FromText:": "@noun"
                                                    },
                                                    {
                                                      "FromText:": "@other_noun"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            [
                                              {
                                                "ReportStoringInto actor:noun:otherNoun:": [
                                                  {
                                                    "FromText:": "@actor"
                                                  },
                                                  {
                                                    "FromText:": "@noun"
                                                  },
                                                  {
                                                    "FromText:": "@other_noun"
                                                  }
                                                ]
                                              }
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Listen:handlers:": [
        "things",
        [
          {
            "With:event:rules:": [
              "while",
              "store into",
              [
                {
                  "PatternRule:do:": [
                    true,
                    [
                      {
                        "If:assuming:do:else:": [
                          {
                            "Not:": {
                              "Is empty:": "@error"
                            }
                          },
                          {
                            "Arg:from:": [
                              "error",
                              {
                                "FromText:": {
                                  "MoveObject obj:dest:": [
                                    {
                                      "FromText:": "@noun"
                                    },
                                    {
                                      "FromText:": "@other_noun"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          [
                            {
                              "Print:": "@error"
                            },
                            {
                              "Set:from:": [
                                "@success",
                                {
                                  "FromBool:": false
                                }
                              ]
                            }
                          ],
                          {
                            "Finally do:": [
                              {
                                "Set:from:": [
                                  "@success",
                                  {
                                    "FromBool:": true
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Define pattern:requires:result:withRules:": [
        "report storing into",
        [
          {
            "Text:kind:": [
              "actor",
              "actor"
            ]
          },
          {
            "Text:kind:": [
              "noun",
              "thing"
            ]
          },
          {
            "Text:kind:": [
              "other noun",
              "thing"
            ]
          }
        ],
        {
          "Nothing": true
        },
        []
      ]
    },
    {
      "Extend pattern:withRules:": [
        "report storing into",
        [
          {
            "PatternRule:do:": [
              {
                "Not:": {
                  "IsPlayer obj:": {
                    "FromText:": "@actor"
                  }
                }
              },
              [
                {
                  "Say response:with:": [
                    "someone stores",
                    "{The: .actor|capitalize!} put {the: .noun} {on:.other_noun} {the: .other_noun}."
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:do:": [
              true,
              [
                {
                  "Say response:with:": [
                    "player stores",
                    "{We:|capitalize!} put {the: .noun} {on:.other_noun} {the: .other_noun}."
                  ]
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Extend pattern:withRules:": [
        "can handle",
        [
          {
            "PatternRule:do:": [
              {
                "AllTrue:": [
                  {
                    "Cmp:is:txt:": [
                      "@action",
                      "equal_to",
                      "storing into"
                    ]
                  },
                  {
                    "Cmp:is:txt:": [
                      {
                        "WearerOf obj:": {
                          "FromText:": "@noun"
                        }
                      },
                      "equal_to",
                      "@actor"
                    ]
                  }
                ]
              },
              [
                {
                  "Set:from:": [
                    "@response",
                    {
                      "FromText:": {
                        "Say response:with:": [
                          "can't insert clothing",
                          "{We:|capitalize!} would have to take {those:.noun} off first."
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:do:": [
              {
                "AllTrue:": [
                  {
                    "Cmp:is:txt:": [
                      "@action",
                      "equal_to",
                      "storing into"
                    ]
                  },
                  {
                    "AncestorOf obj:root:": [
                      {
                        "FromText:": "@other_noun"
                      },
                      {
                        "FromText:": "@noun"
                      }
                    ]
                  }
                ]
              },
              [
                {
                  "Set:from:": [
                    "@response",
                    {
                      "FromText:": {
                        "Say response:with:": [
                          "can't insert something into itself",
                          "{We:|capitalize!} can't put  {those:.noun} {on:.other_noun} itself."
                        ]
                      }
                    }
                  ]
                },
                {
                  "Comment:": "trying to put the noun into the other noun, but the other noun is on or in the noun. ( ex. can't put a backpack into a purse that's inside the backpack. )"
                }
              ]
            ]
          }
        ]
      ]
    },
    {
      "--": ""
    },
    {
      "Extend pattern:withRules:": [
        "reach down",
        [
          {
            "PatternRule:do:": [
              {
                "AllTrue:": [
                  {
                    "Cmp:is:txt:": [
                      "@action",
                      "equal_to",
                      "storing into"
                    ]
                  },
                  {
                    "KindOf:is:": [
                      "@into_obj",
                      "actors"
                    ]
                  }
                ]
              },
              [
                {
                  "Comment:": "If the target noun were owned by reaching actor then the actor would be the lca. By checking \"reach down\" we are checking *below* the lca so it would have to be some other actor's possessions we are trying to reach."
                },
                {
                  "Set:from:": [
                    "@response",
                    {
                      "FromText:": {
                        "Say response:with:": [
                          "can't store people's possessions",
                          "{those: .noun|capitalize!} seems to belong to {the: .into_obj}."
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          },
          {
            "PatternRule:do:": [
              {
                "AllTrue:": [
                  {
                    "Cmp:is:txt:": [
                      "@action",
                      "equal_to",
                      "storing into"
                    ]
                  },
                  {
                    "Cmp:is:txt:": [
                      "@into_obj",
                      "equal_to",
                      "@noun"
                    ]
                  },
                  {
                    "Not:": {
                      "ProvidesStorage obj:": {
                        "FromText:": "@into_obj"
                      }
                    }
                  }
                ]
              },
              [
                {
                  "Comment:": "Assuming we are able to reach the noun, check whether it actually provides storage."
                },
                {
                  "Set:from:": [
                    "@response",
                    {
                      "FromText:": {
                        "Say response:with:": [
                          "can only store to storage",
                          "{the: .from_obj|capitalize!} can't {contain:.from_obj} things."
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          },
          {
            "--": "Assuming we are able to reach the noun, check whether it actually allows storage right now. ( ex. open, not closed. )",
            "PatternRule:do:": [
              {
                "AllTrue:": [
                  {
                    "Cmp:is:txt:": [
                      "@action",
                      "equal_to",
                      "storing into"
                    ]
                  },
                  {
                    "Cmp:is:txt:": [
                      "@into_obj",
                      "equal_to",
                      "@noun"
                    ]
                  },
                  {
                    "Not:": {
                      "AllowsStorage obj:": {
                        "FromText:": "@into_obj"
                      }
                    }
                  }
                ]
              },
              [
                {
                  "Set:from:": [
                    "@response",
                    {
                      "FromText:": {
                        "Say response:with:": [
                          "can only store when allowed",
                          "{the: .from_obj|capitalize!} is closed."
                        ]
                      }
                    }
                  ]
                }
              ]
            ]
          }
        ]
      ]
    }
  ]
}
