{
  "Tapestry:": [
    {
      "Comment:": [
        "\"Cloak of Darkness\" is a story, originally told by Roger Firth, which has been implemented in many if systems over the years. It contains some essential features used by interactive fiction including: descriptions of rooms, their contents, and connections, darkness and the control of light, scoring, and more."
      ]
    },
    {
      "Define scene:dependsOn:with:": [
        "cloak",
        [
          "tapestry",
          "scoring"
        ],
        [
          {
            "Define value:of:as:": [
              "title",
              "story",
              {
                "FromText:": "The Cloak of Darkness"
              }
            ]
          },
          {
            "Define value:of:as:": [
              "headline",
              "story",
              {
                "FromText:": "An example story"
              }
            ]
          },
          {
            "Define value:of:as:": [
              "max score",
              "story",
              {
                "FromNumber:": 2
              }
            ]
          },
          {
            "Declare:": "The Foyer of the Opera House is a room. You are in the foyer."
          },
          {
            "Define value:of:as:": [
              "description",
              "the Foyer",
              {
                "FromText:": [
                  "You are standing in a spacious hall, splendidly decorated in red and gold, with glittering chandeliers overhead. The entrance from the street is to the north, and there are doorways south and east."
                ]
              }
            ]
          },
          {
            "--": "fix: its not ideal that we have to explicitly declare these. the flip side, is that if we implicitly declare these, then they'd have to use the full names or 'foyer' would generate something different than 'foyer of the opera house.'",
            "Declare:": "The street is a room. The entrance is a scenery door."
          },
          {
            "Heading:from:via:and:otherRoom:": [
              "north",
              "the Foyer",
              "the entrance",
              "arriving_at",
              "the street"
            ]
          },
          {
            "Define rule:noun:do:": [
              "instead of traveling",
              "entrance",
              {
                "Say:": "You've only just arrived and besides the weather outside is terrible."
              }
            ]
          },
          {
            "Heading:from:and:otherRoom:": [
              "east",
              "the Foyer",
              "connecting_to",
              "the Cloakroom"
            ]
          },
          {
            "Declare:": "The Cloakroom is a room. In the Cloakroom is a supporter called the small brass hook. The hook is scenery."
          },
          {
            "Define value:of:as:": [
              "description",
              "Cloakroom",
              {
                "FromText:": "In the Opera's better days the walls of this small room must have been lined with coat hooks. Now, only one remains. The exit is a door to the west."
              }
            ]
          },
          {
            "Interpret alias:as:": [
              "peg",
              "hook"
            ]
          },
          {
            "Define value:of:as:": [
              "description",
              "the hook",
              {
                "FromText:": "A brass hook{if children_of: .hook} with {children_of: .hook | print_inline_objects!} hanging on it{else} screwed into the wall{end}."
              }
            ]
          },
          {
            "--": "The Bar"
          },
          {
            "Heading:from:and:otherRoom:": [
              "south",
              "the Foyer",
              "connecting_to",
              "the bar"
            ]
          },
          {
            "Declare:": "The bar is a room. The bar is unlit. The scrawled message is scenery in the bar."
          },
          {
            "Define value:of:as:": [
              "printed name",
              "the bar",
              {
                "FromText:": "Foyer Bar"
              }
            ]
          },
          {
            "Define value:of:as:": [
              "description",
              "the bar",
              {
                "FromText:": "The bar, much rougher than you'd have guessed after the opulence of the foyer to the north, is completely empty. There seems to be some sort of message scrawled in the sawdust on the floor."
              }
            ]
          },
          {
            "Interpret alias:as:": [
              [
                "floor",
                "sawdust"
              ],
              "message"
            ]
          },
          {
            "Define traits:as:": [
              [
                "neat",
                "scuffed",
                "trampled"
              ],
              "neatness"
            ]
          },
          {
            "Define kind:fields:": [
              "messages",
              {
                "Aspect:": "neatness"
              }
            ]
          },
          {
            "Declare:": "Messages are a kind of thing. The scrawled message is a message."
          },
          {
            "Define rule:noun:do:": [
              "instead of examining",
              "message",
              [
                {
                  "Increase:": {
                    "Object:field:": [
                      "story",
                      "score"
                    ]
                  }
                },
                {
                  "Say:": "The message, {if .message.neat}neatly {end}marked in the sawdust, reads..."
                },
                {
                  "--": "Uses the default end game message.",
                  "EndGame finally:": {
                    "FromBool:": true
                  }
                }
              ]
            ]
          },
          {
            "Define rule:noun:do:": [
              "instead of examining",
              "message",
              {
                "If:do:": [
                  {
                    "Object:field:": [
                      "message",
                      "trampled"
                    ]
                  },
                  [
                    {
                      "Say:": "The message has been carelessly trampled, making it difficult to read. You can just distinguish the words..."
                    },
                    {
                      "EndGame saying:": {
                        "FromText:": "You have lost"
                      }
                    }
                  ]
                ]
              }
            ]
          },
          {
            "Define rule:do:": [
              "instead of going",
              {
                "If:do:": [
                  {
                    "AllTrue:": [
                      {
                        "Is:matching:text:": [
                          {
                            "Object:field:": [
                              "story",
                              "location"
                            ]
                          },
                          "equal_to",
                          {
                            "IdOf:": "bar"
                          }
                        ]
                      },
                      {
                        "Object:field:": [
                          "bar",
                          "unlit"
                        ]
                      },
                      {
                        "--": [
                          "this is unsatisfying",
                          "would love to say 'destination' other than 'foyer'",
                          "but destination comes from door, and if there is no door there's no destination."
                        ],
                        "Is:matching:text:": [
                          "@direction",
                          "other_than",
                          "north"
                        ]
                      }
                    ]
                  },
                  [
                    {
                      "Set:trait:": [
                        "message",
                        "trampled"
                      ]
                    },
                    {
                      "Say:": "Blundering around in the dark isn't a good idea!"
                    }
                  ]
                ]
              }
            ]
          },
          {
            "Define rule:do:": [
              "instead of running action",
              {
                "If:do:": [
                  {
                    "AllTrue:": [
                      {
                        "Is:matching:text:": [
                          {
                            "Object:field:": [
                              "story",
                              "location"
                            ]
                          },
                          "equal_to",
                          {
                            "IdOf:": "bar"
                          }
                        ]
                      },
                      {
                        "Is:matching:text:": [
                          "@action",
                          "other_than",
                          "going"
                        ]
                      },
                      {
                        "Object:field:": [
                          "bar",
                          "unlit"
                        ]
                      }
                    ]
                  },
                  [
                    {
                      "--": "increase neatness, clamp so that it doesn't go past 'trampled'",
                      "Increase:aspect:clamp:": [
                        "message",
                        "neatness",
                        true
                      ]
                    },
                    {
                      "Say:": "In the dark? You could easily disturb something."
                    }
                  ]
                ]
              }
            ]
          },
          {
            "--": "The cloak of darkness."
          },
          {
            "Declare:": "You are wearing a velvet cloak."
          },
          {
            "Interpret alias:as:": [
              [
                "dark",
                "black",
                "satin"
              ],
              "cloak"
            ]
          },
          {
            "Define value:of:as:": [
              "description",
              "the cloak",
              {
                "FromText:": "A handsome cloak made of velvet trimmed with satin. Its blackness is so deep that it seems to suck light from the room."
              }
            ]
          },
          {
            "Define rule:noun:do:": [
              "taking",
              "cloak",
              {
                "Set:trait:": [
                  "bar",
                  "unlit"
                ]
              }
            ]
          },
          {
            "--": "FIX: generic way to capture is/not in possession",
            "Define rule:noun:do:": [
              "dropping",
              "cloak",
              {
                "Set:trait:": [
                  "bar",
                  "lit"
                ]
              }
            ]
          },
          {
            "Define rule:noun:do:": [
              "after storing",
              "cloak",
              [
                {
                  "Set:trait:": [
                    "bar",
                    "lit"
                  ]
                },
                {
                  "Increase:": {
                    "Object:field:": [
                      "story",
                      "score"
                    ]
                  }
                }
              ]
            ]
          },
          {
            "Define rule:noun:do:": [
              "instead of dropping",
              "cloak",
              {
                "If:do:": [
                  {
                    "Is:matching:text:": [
                      {
                        "Object:field:": [
                          "story",
                          "location"
                        ]
                      },
                      "other_than",
                      "cloakroom"
                    ]
                  },
                  {
                    "Say:": "This isn't the best place to leave such a nice piece of clothing."
                  }
                ]
              }
            ]
          },
          {
            "Define rule:noun:do:": [
              "instead of storing",
              "cloak",
              {
                "If:do:": [
                  {
                    "Is:matching:text:": [
                      {
                        "Object:field:": [
                          "story",
                          "location"
                        ]
                      },
                      "other_than",
                      "cloakroom"
                    ]
                  },
                  {
                    "Say:": "This isn't the best place to leave such a nice piece of clothing."
                  }
                ]
              }
            ]
          },
          {
            "Interpret:with:": [
              "hang",
              [
                {
                  "One noun:": "objects"
                },
                {
                  "One word:": [
                    "on",
                    "onto"
                  ]
                },
                {
                  "One noun:": "objects"
                },
                {
                  "Action:": "storing"
                }
              ]
            ]
          },
          {
            "Test:do:": [
              "cloak of dropping",
              [
                {
                  "--": [
                    "fix: have to manually start the game for tests.",
                    "maybe an option of some sort, or a scan for Fabricate input"
                  ],
                  "StartGame actor:quietly:": [
                    {
                      "FromText:": {
                        "Object:field:": [
                          "player",
                          "pawn"
                        ]
                      }
                    },
                    {
                      "FromBool:": true
                    }
                  ]
                },
                {
                  "Fabricate input:": "e; drop cloak; w; s; x message"
                },
                {
                  "Expect:": {
                    "Object:field:": [
                      "story",
                      "completed"
                    ]
                  }
                },
                {
                  "Expect:": {
                    "Is:matching:num:": [
                      {
                        "Object:field:": [
                          "story",
                          "score"
                        ]
                      },
                      "equal_to",
                      1
                    ]
                  }
                }
              ]
            ]
          },
          {
            "Test:do:": [
              "cloak of perfection",
              [
                {
                  "--": [
                    "fix: have to manually start the game for tests.",
                    "maybe an option of some sort, or a scan for Fabricate input"
                  ],
                  "StartGame actor:quietly:": [
                    {
                      "FromText:": {
                        "Object:field:": [
                          "player",
                          "pawn"
                        ]
                      }
                    },
                    {
                      "FromBool:": true
                    }
                  ]
                },
                {
                  "Fabricate input:": "e; take off cloak; put cloak on hook; w; s; x message"
                },
                {
                  "Expect:": {
                    "Object:field:": [
                      "story",
                      "completed"
                    ]
                  }
                },
                {
                  "Expect:": {
                    "Is:matching:num:": [
                      {
                        "Object:field:": [
                          "story",
                          "score"
                        ]
                      },
                      "equal_to",
                      2
                    ]
                  }
                }
              ]
            ]
          },
          {
            "Test:do:": [
              "cloak of failure",
              [
                {
                  "--": [
                    "fix: have to manually start the game for tests.",
                    "maybe an option of some sort, or a scan for Fabricate input"
                  ],
                  "StartGame actor:quietly:": [
                    {
                      "FromText:": {
                        "Object:field:": [
                          "player",
                          "pawn"
                        ]
                      }
                    },
                    {
                      "FromBool:": true
                    }
                  ]
                },
                {
                  "Fabricate input:": "s; jump; jump; n; e; drop cloak; w; s; x message"
                },
                {
                  "--": "game should be finished, but not completed.",
                  "Expect:": {
                    "Object:field:": [
                      "story",
                      "concluded"
                    ]
                  }
                },
                {
                  "--": "and you should have scored nothing for dropping the cloak.",
                  "Expect:": {
                    "Is:matching:num:": [
                      {
                        "Object:field:": [
                          "story",
                          "score"
                        ]
                      },
                      "equal_to",
                      0
                    ]
                  }
                }
              ]
            ]
          }
        ]
      ]
    }
  ]
}
