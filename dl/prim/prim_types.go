// Code generated by Tapestry; edit at your own risk.
package prim

import (
	"git.sr.ht/~ionous/tapestry/lang/typeinfo"
)

const (
	Zc_Bool_True  = "true"
	Zc_Bool_False = "false"
)

// bool, a type of str enum.
var Zt_Bool = typeinfo.Str{
	Name: "bool",
	Options: []string{
		Zc_Bool_True,
		Zc_Bool_False,
	},
}
var Zt_Lines = typeinfo.Str{
	Name: "lines",
	Markup: map[string]any{
		"comment": "A sequence of characters of any length spanning multiple lines. See also: text.",
	},
}
var Zt_Text = typeinfo.Str{
	Name: "text",
	Markup: map[string]any{
		"comment": "A sequence of characters of any length, all on one line. Examples include letters, words, or short sentences. Text is generally something displayed to the player. See also: lines.",
	},
}

// number, a type of num.
var Zt_Number = typeinfo.Num{
	Name: "number",
}

// package listing of type data
var Z_Types = typeinfo.TypeSet{
	Name:       "prim",
	Str:        z_str_list,
	Num:        z_num_list,
	Signatures: z_signatures,
}

// a list of all strs in this this package
var z_str_list = []*typeinfo.Str{
	&Zt_Bool,
	&Zt_Lines,
	&Zt_Text,
}

// a list of all nums in this this package
var z_num_list = []*typeinfo.Num{
	&Zt_Number,
}

// a list of all command signatures
// ( for processing and verifying story files )
var z_signatures = map[uint64]any{
	1736897526516691909:  (*Bool)(nil),   /* Bool: */
	16705119881164468210: (*Lines)(nil),  /* Lines: */
	5524275432872349646:  (*Number)(nil), /* Number: */
	3128978846958847468:  (*Text)(nil),   /* Text: */
}
